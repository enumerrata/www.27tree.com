<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>Web开发者不可不知的15条编码原则</title>
<content>&amp;lt;p&amp;gt;
	HTML已经走过了近20的发展历程。从HTML4到XHTML，再到最近十分火热的HTML5，它几乎见证了整个互联网的发展。但是，即便到现在，有很多基础的概念和原则依然需要开发者高度注意。下面，向大家介绍这些应该遵循的开发原则。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;1、善用DIV来布局&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	当开发一个Web页面时，要考虑第一件事就是区分页面重点。将这些内容用DIV标签包含起来，页面的代码会呈现出整洁、缩进良好的风格。
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;div&amp;nbsp;id=\"header\"&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;
&amp;amp;lt;div&amp;nbsp;id=\"body-container\"&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;div&amp;nbsp;id=\"content\"&amp;amp;gt;&amp;nbsp;&amp;amp;lt;!--&amp;nbsp;Content&amp;nbsp;--&amp;nbsp;&amp;amp;gt;&amp;nbsp;&amp;amp;lt;/div&amp;amp;gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;div&amp;nbsp;id=\"right-side-bar\"&amp;amp;gt;&amp;nbsp;&amp;amp;lt;!--&amp;nbsp;Right&amp;nbsp;Side&amp;nbsp;Bar&amp;nbsp;Content&amp;nbsp;Area&amp;nbsp;--&amp;nbsp;&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;
&amp;amp;lt;/div&amp;amp;gt;&amp;nbsp;
&amp;amp;lt;div&amp;nbsp;id=\"footer\"&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;2、将HTML标签和CSS样式表分割开来&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	好的页面应该将HTML标签和CSS样式表分割开来。这是每一个Web开发者在首次接触Web开发时就应该知道的一条原则。然而，直到今天，仍然有很多开发者没有严格遵循这一原则。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	不要在HTML标签里内嵌样式表代码。开发者应该养成习惯，单独建立文件，用以存放CSS样式表。而这也将方便其他开发者在修改你的代码时，能迅速完成工作。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;p&amp;nbsp;style=\"color:&amp;nbsp;#CCC;&amp;nbsp;font-size:16px;&amp;nbsp;font-family:&amp;nbsp;arial\"&amp;amp;gt;An&amp;nbsp;example&amp;nbsp;to&amp;nbsp;illustrate&amp;nbsp;inline&amp;nbsp;style&amp;nbsp;in&amp;nbsp;html&amp;amp;lt;/p&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;3、优化CSS代码&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	现如今，为网站添加多个CSS文件的做法已经很普遍。但是，当网站包含的CSS文件过多时，会降低网站的响应速度。解决办法是：精简代码并对多个CSS文件进行优化，将其合并成一个文件。这个办法能显著提升网站的加载速度。此外，有很多工具可以用来优化CSS文件，例如CSS&amp;nbsp;Optimizer、Clean&amp;nbsp;CSS等。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;4、优化Javascript文件，并将其放到页面底部&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	和CSS一样，为页面添加多个Javascript文件也是很普遍的做法。但这同样会降低网站的响应速度。为此，开发者应该精简、优化这些Javascript文件。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	但有一点和CSS不同，浏览器通常不支持并行加载。这也就是说，当浏览器加载Javascript文件时，将不再同时加载其它内容。而这就导致了网页的加载速度好像变慢了。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	一个好的解决办法是：将Javascript文件的加载顺序放在最后。为了实现这一目标，开发者可以把Javascript代码放在HTML文档的底部，而最好的位置是放在接近&amp;amp;lt;/body&amp;amp;gt;标签的地方。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;5、善用标题元素&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;h1&amp;amp;gt;&amp;nbsp;到&amp;nbsp;&amp;amp;lt;h6&amp;amp;gt;这些元素用来突出页面的重点内容。这有助于用户更加关注页面的重点部分。对于博客，我（指本文作者）推荐使用&amp;amp;lt;h1&amp;amp;gt;标签来突出博客标题。因为，博客标题几乎是页面中最重要的部分。
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;h1&amp;amp;gt;This&amp;nbsp;is&amp;nbsp;the&amp;nbsp;topmost&amp;nbsp;heading&amp;amp;lt;/h1&amp;amp;gt;
&amp;amp;lt;h2&amp;amp;gt;This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;sub-heading&amp;nbsp;underneath&amp;nbsp;the&amp;nbsp;topmost&amp;nbsp;heading.&amp;amp;lt;/h2&amp;amp;gt;
&amp;amp;lt;h3&amp;amp;gt;This&amp;nbsp;is&amp;nbsp;a&amp;nbsp;sub-heading&amp;nbsp;underneath&amp;nbsp;the&amp;nbsp;h2&amp;nbsp;heading.&amp;amp;lt;/h3&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;6、在合适的地方使用合适的HTML标签&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	HTML标签是构造规范内容结构的关键。例如，&amp;amp;lt;em&amp;amp;gt;标签用来强调重点内容。&amp;amp;lt;p&amp;amp;gt;标签适用于突出文章段落。如果想要在段落间加空行，就不要使用&amp;amp;lt;br&amp;nbsp;/&amp;amp;gt;标签。
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;em&amp;amp;gt;emphasized&amp;nbsp;text&amp;amp;lt;/em&amp;amp;gt;
&amp;amp;lt;strong&amp;amp;gt;strongly&amp;nbsp;emphasized&amp;nbsp;text&amp;amp;lt;/strong&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	对于一组相关的元素，建议使用&amp;amp;lt;ul&amp;amp;gt;、&amp;amp;lt;ol&amp;amp;gt;或&amp;nbsp;&amp;amp;lt;dl&amp;amp;gt;标签。但是，不要错误的使用&amp;amp;lt;blockquote&amp;amp;gt;标签，因为它原本是用来定义块应用的。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;7、避免滥用&amp;amp;lt;div&amp;amp;gt;标签&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	并不是所有块元素都应该用&amp;amp;lt;div&amp;amp;gt;标签来创建。例如，可以在内联元素的属性里添加display:block，将其以块元素的方式显示。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;8、使用列表创建导航&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	使用&amp;amp;lt;ul&amp;amp;gt;列表标签，再配以相应的CSS样式，可以创建美观的导航菜单。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;9、别忘了封闭标签&amp;nbsp;&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	现在，每当我回忆起在大学里学到的关于Web开发的第一堂课时，教授提到的HTML结构的重要性总是浮现在我的脑海。根据W3C标准，标签应该被封闭。那是因为，在一些浏览器下，如果没有按照标准来将标签封闭，会出现显示不正常的问题。而这一情况在IE6、7和8里尤为明显。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;10、标签小写语法&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	标签采用小写语法是一项行业标准。虽然大写语法并不影响页面的显示效果，但是，代码的可读性很差。下面这段代码可读性就非常差：
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;DIV&amp;amp;gt;
&amp;amp;lt;IMG&amp;nbsp;SRC=\"images/demo_image.jpg\"&amp;nbsp;alt=\"demo&amp;nbsp;image\"/&amp;amp;gt;
&amp;amp;lt;A&amp;nbsp;HREF=\"#\"&amp;nbsp;TITLE=\"click&amp;nbsp;here\"&amp;amp;gt;Click&amp;nbsp;Here&amp;amp;lt;/A&amp;amp;gt;
&amp;amp;lt;P&amp;amp;gt;some&amp;nbsp;sample&amp;nbsp;text&amp;amp;lt;/P&amp;amp;gt;
&amp;amp;lt;/DIV&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;11、为图片标签添加alt属性&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在&amp;amp;lt;img&amp;amp;gt;标签里，alt属性通常非常有用。因为搜索引擎通常无法直接抓取图片文件。但是，如果开发者在alt属性里添加了图片的描述内容，将会方便搜索引擎的抓取。
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;!--&amp;nbsp;has&amp;nbsp;an&amp;nbsp;alt&amp;nbsp;attribute,&amp;nbsp;which&amp;nbsp;will&amp;nbsp;validate,&amp;nbsp;but&amp;nbsp;alt&amp;nbsp;value&amp;nbsp;is&amp;nbsp;meaningless&amp;nbsp;--&amp;nbsp;&amp;amp;gt;
&amp;amp;lt;img&amp;nbsp;id=\"logo\"&amp;nbsp;src=\"images/bgr_logo.png\"&amp;nbsp;alt=\"brg_logo.png\"&amp;nbsp;/&amp;amp;gt;

&amp;amp;lt;!--&amp;nbsp;The&amp;nbsp;correct&amp;nbsp;way&amp;nbsp;--&amp;nbsp;&amp;amp;gt;&amp;nbsp;
&amp;amp;lt;img&amp;nbsp;id=\"logo\"&amp;nbsp;src=\"images/bgr_logo.png\"&amp;nbsp;alt=\"Anson&amp;nbsp;Cheung&amp;nbsp;-&amp;nbsp;Web&amp;nbsp;Development\"&amp;nbsp;/&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;12、在表格里使用&amp;amp;lt;label&amp;amp;gt;&amp;nbsp;和&amp;nbsp;&amp;amp;lt;fieldset&amp;amp;gt;&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	为了提高代码质量，并让用户容易理解表格内容，我们应该用&amp;amp;lt;label&amp;amp;gt;&amp;nbsp;和&amp;nbsp;&amp;amp;lt;fieldset&amp;amp;gt;标签创建表格元素。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;fieldset&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;legend&amp;amp;gt;Personal&amp;nbsp;Particular&amp;amp;lt;/legend&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;label&amp;nbsp;for=\"name\"&amp;amp;gt;Name&amp;amp;lt;/label&amp;amp;gt;&amp;amp;lt;input&amp;nbsp;type=\"text\"&amp;nbsp;id=\"name\"&amp;nbsp;name=\"name\"&amp;nbsp;/&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;label&amp;nbsp;for=\"email\"&amp;amp;gt;E-mail&amp;amp;lt;/label&amp;amp;gt;&amp;amp;lt;input&amp;nbsp;type=\"text\"&amp;nbsp;id=\"email\"&amp;nbsp;name=\"email\"&amp;nbsp;/&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;label&amp;nbsp;for=\"subject\"&amp;amp;gt;Subject&amp;amp;lt;/label&amp;amp;gt;&amp;amp;lt;input&amp;nbsp;type=\"text\"&amp;nbsp;id=\"subject\"&amp;nbsp;name=\"subject\"&amp;nbsp;/&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;label&amp;nbsp;for=\"message\"&amp;nbsp;&amp;amp;gt;Message&amp;nbsp;Body&amp;amp;lt;/label&amp;amp;gt;&amp;amp;lt;textarea&amp;nbsp;rows=\"10\"&amp;nbsp;cols=\"20\"&amp;nbsp;id=\"message\"&amp;nbsp;name=\"message\"&amp;nbsp;&amp;amp;gt;&amp;amp;lt;/textarea&amp;amp;gt;
&amp;amp;lt;/fieldset&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;13、将浏览器兼容代码标明信息并相互分开&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	对一名Web开发者来说，跨浏览器兼容是一个被重点关注的问题。通常，开发者会针对不同的浏览器来编码，也即是CSS&amp;nbsp;hack。但是，如果开发者在编码时，能注明代码为哪一个版本的浏览器所写，会为以后的维护工作带来极大方便。下面就是一个很好的示例：
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;!--[if&amp;nbsp;IE&amp;nbsp;7]&amp;amp;gt;
&amp;amp;lt;link&amp;nbsp;rel=\"stylesheet\"&amp;nbsp;href=\"css/ie-7.css\"&amp;nbsp;media=\"all\"&amp;amp;gt;
&amp;amp;lt;![endif]--&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;!--[if&amp;nbsp;IE&amp;nbsp;6]&amp;amp;gt;
&amp;amp;lt;link&amp;nbsp;rel=\"stylesheet\"&amp;nbsp;href=\"css/ie-6.css\"&amp;nbsp;media=\"all\"&amp;amp;gt;
&amp;amp;lt;script&amp;nbsp;type=\"text/javascript\"&amp;nbsp;src=\"js/DD_belatedPNG_0.0.8a-min.js\"&amp;amp;gt;&amp;amp;lt;/script&amp;amp;gt;
&amp;amp;lt;script&amp;nbsp;type=\"text/javascript\"&amp;amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DD_belatedPNG.fix(&amp;nbsp;#logo&amp;nbsp;);
&amp;amp;lt;/script&amp;amp;gt;
&amp;amp;lt;![endif]--&amp;amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;strong&amp;gt;14、避免过度注释&amp;lt;/strong&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	作为一名开发者，在代码中添加注释是一个好习惯，能方便理解并易于维护。这在其它编程语言如PHP、JAVA&amp;nbsp;和&amp;nbsp;C#里很普遍。但是，HTML/XHTML是文本标记语言，非常容易理解。因此，无需为每行代码都添加注释。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	15、测试代码
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	推荐开发者使用W3C文本标记验证服务来测试代码。它是一个高效的测试工具，能帮助你发现页面中存在的错误。而且，它还能从页面错误出发，帮你定位到相应的代码。这一点通常在编码完成后很难做到。但开发者需要注意的是，验证通过的代码并非就是性能优异的代码。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;</content>
<json-link>./file/web/2012-05-12/1336789435.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
</comment-list>
</root>
