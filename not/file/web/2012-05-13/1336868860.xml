<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>最全的CSS浏览器兼容问题</title>
<content>&amp;lt;p&amp;gt;
	CSS对浏览器的兼容性有时让人很头疼,或许当你了解当中的技巧跟原理,就会觉得也不是难事,从网上收集了IE7,6与Fireofx的兼容性处理方法并
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	整理了一下.对于web2.0的过度,请尽量用xhtml格式写代码,而且DOCTYPE&amp;nbsp;影响&amp;nbsp;CSS&amp;nbsp;处理,作为W3C的标准,一定要加
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	DOCTYPE声名.
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	CSS技巧
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.div的垂直居中问题&amp;nbsp;vertical-align:middle;&amp;nbsp;将行距增加到和整个DIV一样高&amp;nbsp;line-height:200px;&amp;nbsp;然后插入文字，就垂直居中了。缺点是要控制内容不要换行
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.&amp;nbsp;margin加倍的问题
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。解决方案是在这个div里面加上
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;display:inline;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;例如：&amp;nbsp;&amp;nbsp;
&amp;amp;lt;#div&amp;nbsp;id=”imfloat”&amp;amp;gt;&amp;nbsp;&amp;nbsp;
相应的css为&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
#IamFloat{&amp;nbsp;&amp;nbsp;&amp;nbsp;
float:left;&amp;nbsp;&amp;nbsp;&amp;nbsp;
margin:5px;/*IE下理解为10px*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
display:inline;/*IE下再理解为5px*/
}&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	3.浮动ie产生的双倍距离
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;#box{
float:left;
width:100px;
margin:0&amp;nbsp;0&amp;nbsp;0&amp;nbsp;100px;
}&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	//这种情况之下IE会产生200px的距离&amp;nbsp;display:inline;&amp;nbsp;//使浮动忽略
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	这里细说一下block与inline两个元素：block元素的特点是,总是在新行上开始,高度,宽度,行高,边距都可以控制(块元素);Inline
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	元素的特点是,和其他元素在同一行上,不可控制(内嵌元素);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#box{&amp;nbsp;display:block;&amp;nbsp;//可以为内嵌元素模拟为块元素
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	display:inline;&amp;nbsp;//实现同一行排列的效果&amp;nbsp;diplay:table;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	4&amp;nbsp;IE与宽度和高度的问题&amp;nbsp;IE
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	不认得min-这个定义，但实际上它把正常的width和height当作有min的情况来使。这样问题就大了，如果只用宽度和高度，正常的浏览器里这两
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	个值就不会变，如果只用min-width和min-height的话，IE下面根本等于没有设置宽度和高度。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	比如要设置背景图片，这个宽度是比较重要的。要解决这个问题，可以这样：
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;#box{
&amp;nbsp;&amp;nbsp;width:&amp;nbsp;80px;
&amp;nbsp;&amp;nbsp;height:35px;
}
html&amp;amp;gt;body&amp;nbsp;#box{
&amp;nbsp;&amp;nbsp;width:&amp;nbsp;auto;
&amp;nbsp;&amp;nbsp;height:&amp;nbsp;auto;
&amp;nbsp;&amp;nbsp;min-width:&amp;nbsp;80px;
&amp;nbsp;&amp;nbsp;min-height:&amp;nbsp;35px;
}&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	5.页面的最小宽度
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	min-width是个非常方便的CSS命令，它可以指定元素最小也不能小于某个宽度，这样就能保证排版一直正确。但IE不认得这个，而它实际上把width当
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	做最小宽度来使。为了让这一命令在IE上也能用，可以把一个&amp;amp;lt;div&amp;amp;gt;&amp;nbsp;放到&amp;nbsp;&amp;amp;lt;body&amp;amp;gt;&amp;nbsp;标签下，然后为div指定一个类,
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	然后CSS这样设计：
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;#container{
min-width:&amp;nbsp;600px;
width:expression(document.body.clientWidth&amp;nbsp;&amp;amp;lt;&amp;nbsp;600?&amp;nbsp;600px:&amp;nbsp;auto&amp;nbsp;);
}&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	第一个min-width是正常的；但第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	过Javascript的判断来实现最小宽度。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	6.DIV浮动IE文本产生3象素的bug&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;左边对象浮动，右边采用外补丁的左边距来定位，右边对象内的文本会离左边有3px的间距.
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;#box{&amp;nbsp;float:left;&amp;nbsp;width:800px;}&amp;nbsp;&amp;nbsp;
#left{&amp;nbsp;float:left;&amp;nbsp;width:50%;}&amp;nbsp;&amp;nbsp;
#right{&amp;nbsp;width:50%;}&amp;nbsp;&amp;nbsp;
*html&amp;nbsp;#left{&amp;nbsp;margin-right:-3px;&amp;nbsp;//这句是关键}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;div&amp;nbsp;id=box&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=left&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=right&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	7.IE捉迷藏的问题&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当div应用复杂的时候每个栏中又有一些链接，DIV等这个时候容易发生捉迷藏的问题。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	有些内容显示不出来，当鼠标选择这个区域是发现内容确实在页面。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	解决办法：对#layout使用line-height属性或者给#layout使用固定高和宽。页面结构尽量简单。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	8.float的div闭合;清除浮动;自适应高度;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	①&amp;nbsp;例如：&amp;amp;lt;#div&amp;nbsp;id=”floatA”&amp;nbsp;&amp;amp;gt;&amp;amp;lt;#div&amp;nbsp;id=”floatB”&amp;nbsp;&amp;amp;gt;&amp;amp;lt;#div&amp;nbsp;id=”NOTfloatC”&amp;nbsp;&amp;amp;gt;这里的NOTfloatC并不希望继续平移，而是希望往下排。(其中floatA、floatB的属性已经设置为float:left;)&amp;nbsp;&amp;nbsp;&amp;nbsp;这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。在
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;#div&amp;nbsp;class=”floatB”&amp;amp;gt;&amp;nbsp;&amp;amp;lt;#div&amp;nbsp;class=”NOTfloatC”&amp;amp;gt;之间加上&amp;nbsp;&amp;amp;lt;&amp;nbsp;#div&amp;nbsp;class=”clear”&amp;amp;gt;这个div一定要注意位置，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	并且将clear这种样式定义为为如下即可：&amp;nbsp;.clear{&amp;nbsp;clear:both;}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	②作为外部&amp;nbsp;wrapper&amp;nbsp;的&amp;nbsp;div&amp;nbsp;不要定死高度,为了让高度能自动适应，要在wrapper里面加上overflow:hidden;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	当包含float的box的时候，高度自动适应在IE下无效，这时候应该触发IE的layout私有属性(万恶的IE啊！)用zoom:1;可以做到，这样就达到了兼容。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	例如某一个wrapper如下定义：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.colwrapper{&amp;nbsp;overflow:hidden;&amp;nbsp;zoom:1;&amp;nbsp;margin:5px&amp;nbsp;auto;}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	③对于排版,我们用得最多的css描述可能就是float:left.有的时候我们需要在n栏的float&amp;nbsp;div后面做一个统一的背景,譬如:
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;div&amp;nbsp;id=”page”&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=”left”&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=”center”&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=”right”&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	比如我们要将page的背景设置成蓝色,以达到所有三栏的背景颜色是蓝色的目的,但是我们会发现随着left
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	center&amp;nbsp;right的向下拉长,而
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	page居然保存高度不变,问题来了,原因在于page不是float属性,而我们的page由于要居中,不能设置成float,所以我们应该这样解决
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;div&amp;nbsp;id=”page”&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=”bg”&amp;nbsp;style=”float:left;width:100%”&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=”left”&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;div&amp;nbsp;id=”center”&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;div&amp;nbsp;id=”right”&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;再嵌入一个float&amp;nbsp;left而宽度是100%的DIV解决之&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	④万能float&amp;nbsp;闭合(非常重要!)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;关于&amp;nbsp;clear&amp;nbsp;float&amp;nbsp;的原理可参见&amp;nbsp;[How&amp;nbsp;To&amp;nbsp;Clear&amp;nbsp;Floats&amp;nbsp;Without&amp;nbsp;Structural&amp;nbsp;Markup],将以下代码加入Global&amp;nbsp;CSS&amp;nbsp;中,给需要闭合的div加上class=clearfix&amp;nbsp;即可,屡试不爽.
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;&amp;nbsp;/*&amp;nbsp;Clear&amp;nbsp;Fix&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;
.clearfix:after&amp;nbsp;{
content:.;&amp;nbsp;display:block;&amp;nbsp;height:0;&amp;nbsp;clear:both;&amp;nbsp;visibility:hidden;
}&amp;nbsp;&amp;nbsp;
.clearfix&amp;nbsp;{&amp;nbsp;display:inline-block;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;Hide&amp;nbsp;from&amp;nbsp;IE&amp;nbsp;Mac&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
.clearfix&amp;nbsp;{display:block;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;End&amp;nbsp;hide&amp;nbsp;from&amp;nbsp;IE&amp;nbsp;Mac&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*&amp;nbsp;end&amp;nbsp;of
clearfix&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;或者这样设置：.hackbox{&amp;nbsp;display:table;&amp;nbsp;//将对象作为块元素级的表格显示}&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	11.高度不适应&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用margin
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	或paddign&amp;nbsp;时。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;例：&amp;nbsp;&amp;nbsp;&amp;nbsp;#box&amp;nbsp;{background-color:#eee;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#box&amp;nbsp;p
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{margin-top:&amp;nbsp;20px;margin-bottom:&amp;nbsp;20px;&amp;nbsp;text-align:center;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;div
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	id=box&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;p&amp;amp;gt;p对象中的内容&amp;amp;lt;/p&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;/div&amp;amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	解决方法：在P对象上下各加2个空的div对象CSS代码：.1{height:0px;overflow:hidden;}或者为DIV加上
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	border属性。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	12&amp;nbsp;.IE6下为什么图片下有空隙产生解决这个BUG的方法也有很多,可以是改变html的排版,或者设置img
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	为display:block&amp;nbsp;或者设置vertical-align&amp;nbsp;属性为&amp;nbsp;vertical-align:top&amp;nbsp;&amp;brvbar;&amp;nbsp;bottom
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;brvbar;middle&amp;nbsp;&amp;brvbar;text-bottom&amp;nbsp;都可以解决.
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	13.如何对齐文本与文本输入框&amp;nbsp;加上&amp;nbsp;vertical-align:middle;
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;&amp;amp;lt;style&amp;nbsp;type=text/css&amp;amp;gt;
&amp;amp;lt;!--
input&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
width:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
height:30px;
border:1px&amp;nbsp;solid&amp;nbsp;red;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
vertical-align:middle;&amp;nbsp;}
--&amp;amp;gt;
&amp;amp;lt;/style&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	14.web标准中定义id与class有什么区别吗&amp;nbsp;一.web标准中是不容许重复ID的,比如&amp;nbsp;div&amp;nbsp;id=aa
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	不容许重复2次,而class&amp;nbsp;定义的是类,理论上可以无限重复,&amp;nbsp;这样需要多次引用的定义便可以使用他.&amp;nbsp;二.属性的优先级问题&amp;nbsp;ID
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	的优先级要高于class,看上面的例子三.方便JS等客户端脚本,如果在页面中要对某个对象进行脚本操作,那么可以给他定义一个ID,否则只能利用遍历
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	页面元素加上指定特定属性来找到它,这是相对浪费时间资源,远远不如一个ID来得简单.
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	15.&amp;nbsp;LI中内容超过长度后以省略号显示的方法&amp;nbsp;此方法适用与IE与OP浏览器
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;&amp;amp;lt;style&amp;nbsp;type=text/css&amp;amp;gt;
&amp;amp;lt;!--
li&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
width:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
white-space:nowrap;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
text-overflow:ellipsis;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
-o-text-overflow:ellipsis;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
overflow:hidden;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
}
--&amp;amp;gt;
&amp;amp;lt;/style&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	16.为什么web标准中IE无法设置滚动条颜色了&amp;nbsp;解决办法是将body换成html
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;!DOCTYPE&amp;nbsp;html&amp;nbsp;PUBLIC&amp;nbsp;-//W3C//DTD&amp;nbsp;XHTML&amp;nbsp;1.0&amp;nbsp;Strict//EN&amp;nbsp;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;amp;gt;
&amp;amp;lt;meta&amp;nbsp;http-equiv=Content-Type&amp;nbsp;content=text/html;&amp;nbsp;charset=gb2312/&amp;amp;gt;
&amp;amp;lt;style&amp;nbsp;type=text/css&amp;amp;gt;
&amp;amp;lt;!--
html&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
scrollbar-face-color:#f6f6f6;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
scrollbar-highlight-color:#fff;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
scrollbar-shadow-color:#eeeeee;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
scrollbar-3dlight-color:#eeeeee;&amp;nbsp;&amp;nbsp;
scrollbar-arrow-color:#000;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
scrollbar-track-color:#fff;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
scrollbar-darkshadow-color:#fff;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
}&amp;nbsp;--&amp;amp;gt;
&amp;amp;lt;/style&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	17.为什么无法定义1px左右高度的容器&amp;nbsp;IE6下这个问题是因为默认的行高造成的,解决的方法也有很多,例如:overflow:hidden&amp;nbsp;&amp;brvbar;&amp;nbsp;zoom:0.08&amp;nbsp;&amp;brvbar;&amp;nbsp;line-height:1px
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	18.怎么样才能让层显示在FLASH之上呢&amp;nbsp;解决的办法是给FLASH设置透明&amp;nbsp;&amp;amp;lt;param&amp;nbsp;name=wmode&amp;nbsp;value=transparent&amp;nbsp;/&amp;amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	19.怎样使一个层垂直居中于浏览器中这里我们使用百分比绝对定位,与外补丁负值的方法,负值的大小为其自身宽度高度除以二&amp;nbsp;&amp;amp;lt;style
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;type=text/css&amp;amp;gt;
&amp;amp;lt;!--
div&amp;nbsp;{
position:absolute;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
top:50%;
lef:50%;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
margin:-100px&amp;nbsp;0&amp;nbsp;0&amp;nbsp;-100px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
width:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
height:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
border:1px&amp;nbsp;solid&amp;nbsp;red;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
}&amp;nbsp;--&amp;amp;gt;
&amp;amp;lt;/style&amp;amp;gt;&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	FF与IE
&amp;lt;/p&amp;gt;
&amp;lt;ul&amp;gt;
	&amp;lt;li&amp;gt;
		Div居中问题&amp;nbsp;&amp;nbsp;&amp;nbsp;div设置&amp;nbsp;margin-left,&amp;nbsp;margin-right&amp;nbsp;为&amp;nbsp;auto&amp;nbsp;时已经居中，IE&amp;nbsp;不行，IE需要设定body居中，首先在父级元素定义text-algin:&amp;nbsp;center;这个的意思就是在父级元素内的内容居中。
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		链接(a标签)的边框与背景&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;链接加边框和背景色，需设置&amp;nbsp;display:&amp;nbsp;block,&amp;nbsp;同时设置&amp;nbsp;float:&amp;nbsp;left保证不换行。参照&amp;nbsp;menubar,&amp;nbsp;给&amp;nbsp;a&amp;nbsp;和&amp;nbsp;menubar&amp;nbsp;设置高度是为了避免底边显示错位,&amp;nbsp;若不设&amp;nbsp;height,&amp;nbsp;可以在&amp;nbsp;menubar中插入一个空格。
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		超链接访问过后hover样式就不出现的问题被点击访问过的超链接样式不在具有hover和active了,很多人应该都遇到过这个问题,解决方法是改变CSS属性的排列顺序:&amp;nbsp;L-V-H-A&amp;nbsp;Code:&amp;nbsp;&amp;amp;lt;style&amp;nbsp;type=text/css&amp;amp;gt;&amp;nbsp;&amp;amp;lt;!--a:link&amp;nbsp;{}&amp;nbsp;a:visited&amp;nbsp;{}&amp;nbsp;a:hover&amp;nbsp;{}&amp;nbsp;a:active&amp;nbsp;{}&amp;nbsp;--&amp;amp;gt;&amp;nbsp;&amp;amp;lt;/style&amp;amp;gt;
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		游标手指cursor&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cursor:&amp;nbsp;pointer&amp;nbsp;可以同时在&amp;nbsp;IE&amp;nbsp;FF&amp;nbsp;中显示游标手指状，&amp;nbsp;hand&amp;nbsp;仅&amp;nbsp;IE&amp;nbsp;可以
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		UL的padding与margin&amp;nbsp;&amp;nbsp;&amp;nbsp;ul标签在FF中默认是有padding值的,而在IE中只有margin默认有值,所以先定义&amp;nbsp;ul{margin:0;padding:0;}就能解决大部分问题
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		FORM标签&amp;nbsp;&amp;nbsp;这个标签在IE中,将会自动margin一些边距,而在FF中margin则是0,因此,如果想显示一致,所以最好在css中指定margin和padding,针对上面两个问题,我的css中一般首先都使用这样的样式ul,form{margin:0;padding:0;}给定义死了,所以后面就不会为这个头疼了.
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		BOX模型解释不一致问题&amp;nbsp;&amp;nbsp;&amp;nbsp;在FF和IE中的BOX模型解释不一致导致相差2px解决方法：div{margin:30px!important;margin:28px;}&amp;nbsp;注意这两个margin的顺序一定不能写反，&amp;nbsp;important这个属性IE不能识别，但别的浏览器可以识别。所以在IE下其实解释成这样：&amp;nbsp;div{maring:30px;margin:28px}重复定义的话按照最后一个来执行，所以不可以只写margin:xx&amp;nbsp;px!important;#box{&amp;nbsp;width:600px;&amp;nbsp;//for&amp;nbsp;ie6.0-&amp;nbsp;w\\idth:500px;&amp;nbsp;//for&amp;nbsp;ff+ie6.0}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#box{&amp;nbsp;width:600px!important&amp;nbsp;//for&amp;nbsp;ff&amp;nbsp;width:600px;&amp;nbsp;//for&amp;nbsp;ff+ie6.0&amp;nbsp;width/**/:500px;&amp;nbsp;//for&amp;nbsp;ie6.0-}
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		属性选择器(这个不能算是兼容,是隐藏css的一个bug)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p[id]{}div[id]{}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个对于IE6.0和IE6.0以下的版本都隐藏,FF和OPera作用.属性选择器和子选择器还是有区别的,子选择器的范围从形式来说缩小了,属性选择器的范围比较大,如p[id]中,所有p标签中有id的都是同样式的.
	&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;
		最狠的手段&amp;nbsp;-&amp;nbsp;!important;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果实在没有办法解决一些细节问题,可以用这个方法.FF对于”!important”会自动优先解析,然而IE则会忽略.如下&amp;nbsp;&amp;nbsp;&amp;nbsp;.tabd1{&amp;nbsp;&amp;nbsp;&amp;nbsp;background:url(/res/images/up/tab1.gif)&amp;nbsp;no-repeat&amp;nbsp;0px&amp;nbsp;0px&amp;nbsp;!important;/*Style&amp;nbsp;for&amp;nbsp;FF*/&amp;nbsp;&amp;nbsp;&amp;nbsp;background:url(/res/images/up/tab1.gif)&amp;nbsp;no-repeat1px&amp;nbsp;0px;&amp;nbsp;/*&amp;nbsp;Style&amp;nbsp;for&amp;nbsp;IE&amp;nbsp;*/}&amp;nbsp;&amp;nbsp;&amp;nbsp;值得注意的是，一定要将xxxx&amp;nbsp;!important这句放置在另一句之上，上面已经提过
	&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;p&amp;gt;
	10.IE,FF的默认值问题
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	或许你一直在抱怨为什么要专门为IE和FF写不同的CSS，为什么IE这样让人头疼，然后一边写css，一边咒骂那个可恶的M$
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	IE.其实对于css的标准支持方面，IE并没有我们想象的那么可恶，关键在于IE和FF的默认值不一样而已，掌握了这个技巧，你会发现写出兼容FF和
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	IE的css并不是那么困难，或许对于简单的css，你完全可以不用”!important”这个东西了。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	我们都知道，浏览器在显示网页的时候，都会根据网页的
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	css样式表来决定如何显示，但是我们在样式表中未必会将所有的元素都进行了具体的描述，当然也没有必要那么做，所以对于那些没有描述的属性，浏览器将采
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	用内置默认的方式来进行显示，譬如文字，如果你没有在css中指定颜色，那么浏览器将采用黑色或者系统颜色来显示，div或者其他元素的背景，如果在
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	css中没有被指定，浏览器则将其设置为白色或者透明，等等其他未定义的样式均如此。所以有很多东西出现FF和IE显示不一样的根本原因在于它们的默认显
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	示不一样，而这个默认样式该如何显示我知道在w3中有没有对应的标准来进行规定，因此对于这点也就别去怪罪IE了。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	11.为什么FF下文本无法撑开容器的高度标准浏览器中固定高度值的容器是不会象IE6里那样被撑开的,那我又想固定高度,又想能被撑开需要怎样
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	设置呢？办法就是去掉height设置min-&amp;nbsp;height:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;这里为了照顾不认识min-height的IE6&amp;nbsp;可以这样定义:
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{height:auto!important;&amp;nbsp;height:200px;&amp;nbsp;min-height:200px;&amp;nbsp;}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	12.FireFox下如何使连续长字段自动换行&amp;nbsp;众所周知IE中直接使用&amp;nbsp;word-wrap:break-word&amp;nbsp;就可以了,
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	FF中我们使用JS插入&amp;amp;#10;的方法来解决
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;style&amp;nbsp;type=text/css&amp;amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;!--
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	div{
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	width:300px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;word-wrap:break-word;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;border:1px&amp;nbsp;solid&amp;nbsp;red;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	--&amp;amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;/style&amp;amp;gt;&amp;nbsp;&amp;amp;lt;div&amp;nbsp;id=ff&amp;amp;gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;amp;lt;/div&amp;amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"javascript\"&amp;gt;&amp;amp;lt;scrīpt&amp;nbsp;type=text/javascrīpt&amp;amp;gt;
/*&amp;nbsp;&amp;amp;lt;![CDATA[&amp;nbsp;*/&amp;nbsp;function
toBreakWord(el,&amp;nbsp;intLen)
{
&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;ōbj=document.getElementById(el);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;strContent=obj.innerHTML;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;strTemp=;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;while(strContent.length&amp;amp;gt;intLen)
&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strTemp+=strContent.substr(0,intLen)+&amp;amp;#10;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strContent=strContent.substr(intLen,strContent.length);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;strTemp+=&amp;amp;#10;+strContent;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;obj.innerHTML=strTemp;
}
if(document.getElementById&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!document.all)&amp;nbsp;&amp;nbsp;
toBreakWord(ff,&amp;nbsp;37);&amp;nbsp;/*&amp;nbsp;]]&amp;amp;gt;&amp;nbsp;*/
&amp;amp;lt;/scrīpt&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	13.为什么IE6下容器的宽度和FF解释不同呢
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;?xml&amp;nbsp;version=1.0&amp;nbsp;encoding=gb2312?&amp;amp;gt;
&amp;amp;lt;!DOCTYPE&amp;nbsp;html&amp;nbsp;PUBLIC&amp;nbsp;-//W3C//DTD&amp;nbsp;XHTML&amp;nbsp;1.0&amp;nbsp;Strict//EN&amp;nbsp;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;amp;gt;
&amp;amp;lt;meta&amp;nbsp;http-equiv=Content-Type&amp;nbsp;content=text/html;&amp;nbsp;charset=gb2312/&amp;amp;gt;
&amp;amp;lt;style&amp;nbsp;type=text/css&amp;amp;gt;
&amp;amp;lt;!--&amp;nbsp;div&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
cursor:pointer;&amp;nbsp;
width:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
height:200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
border:10px&amp;nbsp;solid&amp;nbsp;red&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
}
--&amp;amp;gt;&amp;nbsp;&amp;amp;lt;/style&amp;amp;gt;
&amp;amp;lt;div&amp;nbsp;ōnclick=alert(this.offsetWidth)&amp;amp;gt;让FireFox与IE兼容&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	问题的差别在于容器的整体宽度有没有将边框（border）的宽度算在其内,这里IE6解释为200PX
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	,而FF则解释为220PX,那究竟是怎么导致的问题呢？大家把容器顶部的xml去掉就会发现原来问题出在这,顶部的申明触发了IE的qurks
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	mode,关于qurks&amp;nbsp;mode、&amp;nbsp;standards&amp;nbsp;mode的相关知识,请参考:&amp;lt;a&amp;nbsp;href=\"http:\"&amp;nbsp;www.microsoft.com=\"\"&amp;nbsp;china=\"\"&amp;nbsp;msdn=\"\"&amp;nbsp;library=\"\"&amp;nbsp;webservices=\"\"&amp;nbsp;asp.net=\"\"&amp;nbsp;aspnetusstan.mspx?mfr=\"true\"&amp;nbsp;target=\"_blank\"&amp;gt;http:&amp;nbsp;//www.microsoft.com/china/msdn/library/webservices/asp.net/&amp;nbsp;ASPNETusStan.mspx?mfr=true&amp;lt;/a&amp;gt;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	IE6,IE7,FF&amp;nbsp;&amp;nbsp;&amp;nbsp;IE7.0&amp;nbsp;出来了，对CSS的支持又有新问题。浏览器多了，网页兼容性更差了，疲于奔命的还是我们
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	，为解决IE7.0的兼容问题，找来了下面这篇文章：现在我大部分都是用!important来hack，对于ie6和firefox测试可以正常显示，
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	但是ie7对!important可以正确解释，会导致页面没按要求显示！下面是三个浏览器的兼容性收集.
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	第一种，是CSS&amp;nbsp;HACK的方法
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;height:20px;&amp;nbsp;/*For&amp;nbsp;Firefox*/&amp;nbsp;&amp;nbsp;&amp;nbsp;
*height:25px;/*For&amp;nbsp;IE7&amp;nbsp;&amp;amp;&amp;nbsp;IE6*/&amp;nbsp;&amp;nbsp;&amp;nbsp;
_height:20px;&amp;nbsp;/*For&amp;nbsp;IE6*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;注意顺序。&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	这样也属于CSSHACK，不过没有上面这样简洁。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	#example&amp;nbsp;{&amp;nbsp;color:&amp;nbsp;#333;&amp;nbsp;}&amp;nbsp;/*&amp;nbsp;Moz&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;html
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	#example&amp;nbsp;{&amp;nbsp;color:&amp;nbsp;#666;&amp;nbsp;}&amp;nbsp;/*&amp;nbsp;IE6&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*+html&amp;nbsp;#example&amp;nbsp;{&amp;nbsp;color:&amp;nbsp;#999;&amp;nbsp;}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*&amp;nbsp;IE7&amp;nbsp;*/
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"html\"&amp;gt;&amp;amp;lt;!--其他浏览器&amp;nbsp;--&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;link&amp;nbsp;rel=stylesheet&amp;nbsp;type=text/css&amp;nbsp;href=css.css&amp;nbsp;/&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;!--[if&amp;nbsp;IE&amp;nbsp;7]&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;!--&amp;nbsp;适合于IE7&amp;nbsp;--&amp;amp;gt;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;link&amp;nbsp;rel=stylesheet&amp;nbsp;type=text/css&amp;nbsp;href=ie7.css&amp;nbsp;/&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;![endif]--&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;amp;lt;!--[if&amp;nbsp;lte&amp;nbsp;IE&amp;nbsp;6]&amp;amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;lt;!--&amp;nbsp;适合于IE6及一下--&amp;amp;gt;
&amp;amp;lt;link&amp;nbsp;rel=stylesheet&amp;nbsp;type=text/css&amp;nbsp;href=ie.css&amp;nbsp;/&amp;amp;gt;
&amp;amp;lt;![endif]--&amp;amp;gt;&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	第三种，css&amp;nbsp;filter的办法，以下为经典从国外网站翻译过来的。.
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	新建一个css样式如下：
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;#item&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;width:&amp;nbsp;200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;height:&amp;nbsp;200px;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;background:&amp;nbsp;red;&amp;nbsp;&amp;nbsp;&amp;nbsp;
}&amp;nbsp;&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;p&amp;gt;
	新建一个div,并使用前面定义的css的样式：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;div&amp;nbsp;id=item&amp;amp;gt;some&amp;nbsp;text&amp;nbsp;here&amp;amp;lt;/div&amp;amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在body表现这里加入lang属性,中文为zh：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;lt;body&amp;nbsp;lang=en&amp;amp;gt;现在对div元素再定义一个样式:*:lang(en)
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;#item{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
background:green
!important;&amp;nbsp;&amp;nbsp;&amp;nbsp;
}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	这样做是为了用!important覆盖原来的css样式,由于:lang选择器ie7.0并不支持,所以对这句话不会有任何作用,于是也达到了
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	ie6.0下同样的效果,但是很不幸地的是,safari同样不支持此属性,所以需要加入以下css样式：
&amp;lt;/p&amp;gt;
&amp;lt;pre&amp;nbsp;name=\"code\"&amp;nbsp;id=\"prettyprint\"&amp;nbsp;class=\"css\"&amp;gt;#item:empty&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;background:&amp;nbsp;green&amp;nbsp;!important&amp;nbsp;&amp;nbsp;&amp;nbsp;
}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/pre&amp;gt;
&amp;lt;p&amp;gt;
	:empty选择器为css3的规范,尽管safari并不支持此规范,但是还是会选择此元素,不管是否此元素存在,现在绿色会现在在除ie各版本以外的
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	浏览器上。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对IE6和FF的兼容可以考虑以前的!important&amp;nbsp;个人比较喜欢用
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/p&amp;gt;</content>
<json-link>./file/web/2012-05-13/1336868860.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
</comment-list>
</root>
