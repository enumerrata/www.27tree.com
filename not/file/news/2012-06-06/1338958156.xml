<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>jdk和jre有什么区别</title>
<content>&amp;lt;p&amp;gt;
	&amp;lt;span&amp;nbsp;style=\"font-size:14px;\"&amp;gt;&amp;lt;strong&amp;gt;JDK是给专业开发人员用的，JRE是您电脑运行JAVA软件所需的环境，但是JDK包含JRE的功能！&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;span&amp;nbsp;style=\"font-size:14px;\"&amp;gt;&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;span&amp;nbsp;style=\"font-size:14px;\"&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;lt;strong&amp;gt;下边是来自互联网的更多解释，有时间的同学多看看吧。&amp;lt;/strong&amp;gt;
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		JDK是面向开发人员使用的SDK，它提供了Java的开发环境和运行环境。SDK是Software&amp;nbsp;Development&amp;nbsp;Kit&amp;nbsp;一般指软件开发包，可以包括函数库、编译程序等。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		JDK就是Java&amp;nbsp;Development&amp;nbsp;Kit
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		JRE是Java&amp;nbsp;Runtime&amp;nbsp;Enviroment是指Java的运行环境，是面向Java程序的使用者，而不是开发者。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		如果安装了JDK，会发同你的电脑有两套JRE，一套位于&amp;nbsp;\jre&amp;nbsp;另外一套位于&amp;nbsp;C:\Program
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		Files\Java\j2re1.4.1_01
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		目录下，后面这套比前面那套少了Server端的Java虚拟机，不过直接将前面那套的Server端Java虚拟机复制过来就行了。而且在安装JDK可
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		以选择是否安装这个位于&amp;nbsp;C:\Program&amp;nbsp;Files\Jav&amp;nbsp;a&amp;nbsp;目录下的JRE。如果你只安装JRE，而不是JDK，那么只会在
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		C:\Program&amp;nbsp;Files\Java&amp;nbsp;目录下安装唯一的一套JRE。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		JRE的地位就象一台PC机一样，我们写好的
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		Win32应用程序需要操作系统帮我们运行，同样的，我们编写的Java程序也必须要JRE才能运行。所以当你装完JDK后，如果分别在硬盘上的两个不同
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		地方安装了两套JRE，那么你可以想象你的电脑有两台虚拟的Java
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		PC机，都具有运行Java程序的功能。所以我们可以说，只要你的电脑安装了JRE，就可以正确运行Jav&amp;nbsp;a应用程序。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;lt;strong&amp;gt;1&amp;lt;/strong&amp;gt;、为什么Sun要让JDK安装两套相同的JRE?这是因为JDK里面有很多用Java所编写的开发工具(如javac.exe、
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		jar.exe等)，而且都放置在&amp;nbsp;\lib\tools.jar
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		里。从下面例子可以看出，先将tools.jar改名为tools1.jar，然后运行javac.exe，显示如下结果：&amp;nbsp;Exception&amp;nbsp;in
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		thread&amp;nbsp;\"main\"&amp;nbsp;java.lang.NoClassDefFoundError:&amp;nbsp;com/sun/tools/javac&amp;nbsp;/Main
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		这个意思是说，你输入javac.exe与输入&amp;nbsp;java&amp;nbsp;-cp&amp;nbsp;c:\jdk\lib\tools.jar
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		com.sun.tools.javac.Main
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		是一样的，会得到相同的结果。从这里我们可以证明javac.exe只是一个包装器(Wrapper)，而制作的目的是为了让开发者免于输入太长的指命。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		而且可以发现\lib目录下的程序都很小，不大于2
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		9K，从这里我们可以得出一个结论。就是JDK里的工具几乎是用Java所编写，所以也是Java应用程序，因此要使用JDK所附的工具来开发Java程
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		序，也必须要自行附一套JRE才行，所以位于C:\Program&amp;nbsp;Files\Java目录下的那套JRE就是用来运行一般Java程序用的。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;lt;strong&amp;gt;2&amp;lt;/strong&amp;gt;、如果一台电脑安装两套以上的JRE，谁来决定呢?这个重大任务就落在java.exe身上。Java.exe的工作就是找到合适的JRE来
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		运行&amp;nbsp;Java程序。&amp;nbsp;Java.exe依照底下的顺序来查找JRE：自己的目录下有没有JRE;父目录有没有JRE;查询注册表：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java&amp;nbsp;Runtime&amp;nbsp;Environment]
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		所以java.exe的运行结果与你的电脑里面哪个JRE被执行有很大的关系。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;lt;strong&amp;gt;3&amp;lt;/strong&amp;gt;、介绍JVM&amp;nbsp;JRE目录下的Bin目录有两个目录：server与client。这就是真正的jvm.dll所在。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		jvm.dll无法单独工作，当jvm.dll启动后，会使用explicit的方法(就是使用Win32
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		API之中的LoadLibrary()与GetProcAddress()来载入辅助用的动态链接库)，而这些辅助用的动态链接库(.dll)都必须位
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		于jvm.dll所在目录的父目录之中。因此想使用哪个JVM，只需要设置PATH，指向JRE所在目录底下的jvm.dll。
	&amp;lt;/p&amp;gt;
&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;</content>
<json-link>./file/news/2012-06-06/1338958156.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
</comment-list>
</root>
