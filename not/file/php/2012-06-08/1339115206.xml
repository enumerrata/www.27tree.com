<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>php移位运算，移位操作应用口诀</title>
<content>&amp;lt;p&amp;gt;
	原网址：http://www.phpip.com/program/php/A62009905P/21834.html
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	原文不知是否转载，反正我这个是转载，因为觉得实在好，在网上有没有其他更好的，所以摘录到这里，因为互联网管制，怕原文失效，这个是最近最怕的。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	位运算应用口诀
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	清零取位要用与，某位置一可用或
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	若要取反和交换，轻轻松松用异或
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	移位运算
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	要点&amp;nbsp;1&amp;nbsp;它们都是双目运算符，两个运算分量都是整形，结果也是整形。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2&amp;nbsp;\"&amp;amp;lt;&amp;amp;lt;\"&amp;nbsp;左移：右边空出的位上补0，左边的位将从字头挤掉，其值相当于乘2。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3&amp;nbsp;\"&amp;amp;gt;&amp;amp;gt;\"右移：右边的位被挤掉。对于左边移出的空位，如果是正数则空位补0，若为负数，可能补0或补1，这取决于所用的计算机系统。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;\"&amp;amp;gt;&amp;amp;gt;&amp;amp;gt;\"运算符，右边的位被挤掉，对于左边移出的空位一概补上0。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	位运算符的应用&amp;nbsp;(源操作数s&amp;nbsp;掩码mask)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(1)&amp;nbsp;按位与--&amp;nbsp;&amp;amp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1&amp;nbsp;清零特定位&amp;nbsp;(mask中特定位置0，其它位为1，s=s&amp;amp;mask)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2&amp;nbsp;取某数中指定位&amp;nbsp;(mask中特定位置1，其它位为0，s=s&amp;amp;mask)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(2)&amp;nbsp;按位或--&amp;nbsp;&amp;brvbar;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;常用来将源操作数某些位置1，其它位不变。&amp;nbsp;(mask中特定位置1，其它位为0&amp;nbsp;s=s&amp;brvbar;mask)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(3)&amp;nbsp;位异或--&amp;nbsp;^
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1&amp;nbsp;使特定位的值取反&amp;nbsp;(mask中特定位置1，其它位为0&amp;nbsp;s=s^mask)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2&amp;nbsp;不引入第三变量，交换两个变量的值&amp;nbsp;(设&amp;nbsp;a=a1,b=b1)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;目&amp;nbsp;标&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;操&amp;nbsp;作&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;操作后状态
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	a=a1^b1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=a^b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=a1^b1,b=b1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	b=a1^b1^b1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b=a^b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=a1^b1,b=a1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	a=b1^a1^a1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=a^b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a=b1,b=a1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	二进制补码运算公式：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	-x&amp;nbsp;=&amp;nbsp;~x&amp;nbsp;+&amp;nbsp;1&amp;nbsp;=&amp;nbsp;~(x-1)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	~x&amp;nbsp;=&amp;nbsp;-x-1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	-(~x)&amp;nbsp;=&amp;nbsp;x+1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	~(-x)&amp;nbsp;=&amp;nbsp;x-1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x+y&amp;nbsp;=&amp;nbsp;x&amp;nbsp;-&amp;nbsp;~y&amp;nbsp;-&amp;nbsp;1&amp;nbsp;=&amp;nbsp;(x&amp;brvbar;y)+(x&amp;amp;y)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x-y&amp;nbsp;=&amp;nbsp;x&amp;nbsp;+&amp;nbsp;~y&amp;nbsp;+&amp;nbsp;1&amp;nbsp;=&amp;nbsp;(x&amp;brvbar;~y)-(~x&amp;amp;y)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x^y&amp;nbsp;=&amp;nbsp;(x&amp;brvbar;y)-(x&amp;amp;y)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x&amp;brvbar;y&amp;nbsp;=&amp;nbsp;(x&amp;amp;~y)+y
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x&amp;amp;y&amp;nbsp;=&amp;nbsp;(~x&amp;brvbar;y)-~x
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x==y:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;~(x-y&amp;brvbar;y-x)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x!=y:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x-y&amp;brvbar;y-x
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x&amp;amp;lt;&amp;nbsp;y:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(x-y)^((x^y)&amp;amp;((x-y)^x))
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x&amp;amp;lt;=y:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(x&amp;brvbar;~y)&amp;amp;((x^y)&amp;brvbar;~(y-x))
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x&amp;amp;lt;&amp;nbsp;y:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(~x&amp;amp;y)&amp;brvbar;((~x&amp;brvbar;y)&amp;amp;(x-y))//无符号x,y比较
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	x&amp;amp;lt;=y:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(~x&amp;brvbar;y)&amp;amp;((x^y)&amp;brvbar;~(y-x))//无符号x,y比较
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	应用举例
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(1)&amp;nbsp;判断int型变量a是奇数还是偶数&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	a&amp;amp;1&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;0&amp;nbsp;偶数
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	a&amp;amp;1&amp;nbsp;=&amp;nbsp;&amp;nbsp;&amp;nbsp;1&amp;nbsp;奇数
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(2)&amp;nbsp;取int型变量a的第k位&amp;nbsp;(k=0,1,2……sizeof(int))，即a&amp;amp;gt;&amp;amp;gt;k&amp;amp;1
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(3)&amp;nbsp;将int型变量a的第k位清0，即a=a&amp;amp;~(1&amp;amp;lt;&amp;amp;lt;k)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(4)&amp;nbsp;将int型变量a的第k位置1，&amp;nbsp;即a=a&amp;brvbar;(1&amp;amp;lt;&amp;amp;lt;k)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(5)&amp;nbsp;int型变量循环左移k次，即a=a&amp;amp;lt;&amp;amp;lt;k&amp;brvbar;a&amp;amp;gt;&amp;amp;gt;16-k&amp;nbsp;&amp;nbsp;&amp;nbsp;(设sizeof(int)=16)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(6)&amp;nbsp;int型变量a循环右移k次，即a=a&amp;amp;gt;&amp;amp;gt;k&amp;brvbar;a&amp;amp;lt;&amp;amp;lt;16-k&amp;nbsp;&amp;nbsp;&amp;nbsp;(设sizeof(int)=16)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(7)整数的平均值
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	对于两个整数x,y，如果用&amp;nbsp;(x+y)/2&amp;nbsp;求平均值，会产生溢出，因为&amp;nbsp;x+y&amp;nbsp;可能会大于INT_MAX，但是我们知道它们的平均值是肯定不会溢出的，我们用如下算法：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	int&amp;nbsp;average(int&amp;nbsp;x,&amp;nbsp;int&amp;nbsp;y)&amp;nbsp;&amp;nbsp;&amp;nbsp;//返回X,Y&amp;nbsp;的平均值
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{&amp;nbsp;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(x&amp;amp;y)+((x^y)&amp;amp;gt;&amp;amp;gt;1);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(8)判断一个整数是不是2的幂,对于一个数&amp;nbsp;x&amp;nbsp;&amp;amp;gt;=&amp;nbsp;0，判断他是不是2的幂
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	boolean&amp;nbsp;power2(int&amp;nbsp;x)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;((x&amp;amp;(x-1))==0)&amp;amp;&amp;amp;(x!=0)；
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(9)不用temp交换两个整数
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	void&amp;nbsp;swap(int&amp;nbsp;x&amp;nbsp;,&amp;nbsp;int&amp;nbsp;y)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;x&amp;nbsp;^=&amp;nbsp;y;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;y&amp;nbsp;^=&amp;nbsp;x;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;x&amp;nbsp;^=&amp;nbsp;y;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(10)计算绝对值
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	int&amp;nbsp;abs(&amp;nbsp;int&amp;nbsp;x&amp;nbsp;)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	int&amp;nbsp;y&amp;nbsp;;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	y&amp;nbsp;=&amp;nbsp;x&amp;nbsp;&amp;amp;gt;&amp;amp;gt;&amp;nbsp;31&amp;nbsp;;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	return&amp;nbsp;(x^y)-y&amp;nbsp;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//or:&amp;nbsp;(x+y)^y
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(11)取模运算转化成位运算&amp;nbsp;(在不产生溢出的情况下)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;%&amp;nbsp;(2^n)&amp;nbsp;等价于&amp;nbsp;a&amp;nbsp;&amp;amp;&amp;nbsp;(2^n&amp;nbsp;-&amp;nbsp;1)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(12)乘法运算转化成位运算&amp;nbsp;(在不产生溢出的情况下)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;*&amp;nbsp;(2^n)&amp;nbsp;等价于&amp;nbsp;a&amp;amp;lt;&amp;amp;lt;&amp;nbsp;n
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(13)除法运算转化成位运算&amp;nbsp;(在不产生溢出的情况下)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;/&amp;nbsp;(2^n)&amp;nbsp;等价于&amp;nbsp;a&amp;amp;gt;&amp;amp;gt;&amp;nbsp;n
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;例:&amp;nbsp;12/8&amp;nbsp;==&amp;nbsp;12&amp;amp;gt;&amp;amp;gt;3
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(14)&amp;nbsp;a&amp;nbsp;%&amp;nbsp;2&amp;nbsp;等价于&amp;nbsp;a&amp;nbsp;&amp;amp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(15)&amp;nbsp;if&amp;nbsp;(x&amp;nbsp;==&amp;nbsp;a)&amp;nbsp;x=&amp;nbsp;b;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;x=&amp;nbsp;a;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;等价于&amp;nbsp;x=&amp;nbsp;a&amp;nbsp;^&amp;nbsp;b&amp;nbsp;^&amp;nbsp;x;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(16)&amp;nbsp;x&amp;nbsp;的&amp;nbsp;相反数&amp;nbsp;表示为&amp;nbsp;(~x+1)
&amp;lt;/p&amp;gt;</content>
<json-link>./file/php/2012-06-08/1339115206.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
</comment-list>
</root>
