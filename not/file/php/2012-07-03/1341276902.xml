<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>php有关的几种常见安全详解</title>
<content>&amp;lt;p&amp;gt;
	PHP本身再老版本有一些问题，比如在&amp;amp;nbsp;php4.3.10和php5.0.3以前有一些比较严重的bug，所以推荐使用新版。另外，目前闹的轰轰烈烈的SQL&amp;amp;nbsp;Injection也是在PHP上有很多利用方式，所以要保证安全，PHP代码编写是一方面，PHP的配置更是非常关键。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;我们php手手工安装的，php的默认配置文件在&amp;amp;nbsp;/usr/local/apache2/conf/php.ini，我们最主要就是要配置php.ini中的内容，让我们执行php能够更安全。整个PHP中的安全设置主要是为了防止phpshell和SQL&amp;amp;nbsp;Injection的攻击，一下我们慢慢探讨。我们先使用任何编辑工具打开/etc/local/apache2/conf/php.ini，如果你是采用其他方式安装，配置文件可能不在该目录。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（1）&amp;amp;nbsp;打开php的安全模式
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;php的安全模式是个非常重要的内嵌的安全机制，能够控制一些php中的函数，比如system（），同时把很多文件操作函数进行了权限控制，也不允许对某些关键文件的文件，比如/etc/passwd，但是默认的php.ini是没有打开安全模式的，我们把它打开：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;safe_mode&amp;amp;nbsp;=&amp;amp;nbsp;on
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（2）&amp;amp;nbsp;用户组安全
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;当safe_mode打开时，safe_mode_gid被关闭，那么php脚本能够对文件进行访问，而且相同组的用户也能够对文件进行访问。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;建议设置为：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;safe_mode_gid&amp;amp;nbsp;=&amp;amp;nbsp;off
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果不进行设置，可能我们无法对我们服务器网站目录下的文件进行操作了，比如我们需要对文件进行操作的时候。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（3）&amp;amp;nbsp;安全模式下执行程序主目录
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果安全模式打开了，但是却是要执行某些程序的时候，可以指定要执行程序的主目录：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;safe_mode_exec_dir&amp;amp;nbsp;=&amp;amp;nbsp;D:/usr/bin
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;一般情况下是不需要执行什么程序的，所以推荐不要执行系统程序目录，可以指向一个目录，然后把需要执行的程序拷贝过去，比如：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;safe_mode_exec_dir&amp;amp;nbsp;=&amp;amp;nbsp;D:/tmp/cmd
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;但是，我更推荐不要执行任何程序，那么就可以指向我们网页目录：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;safe_mode_exec_dir&amp;amp;nbsp;=&amp;amp;nbsp;D:/usr/www
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（4）&amp;amp;nbsp;安全模式下包含文件
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果要在安全模式下包含某些公共文件，那么就修改一下选项：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;safe_mode_include_dir&amp;amp;nbsp;=&amp;amp;nbsp;D:/usr/www/include/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;其实一般php脚本中包含文件都是在程序自己已经写好了，这个可以根据具体需要设置。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（5）&amp;amp;nbsp;控制php脚本能访问的目录
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;使用open_basedir选项能够控制PHP脚本只能访问指定的目录，这样能够避免PHP脚本访问不应该访问的文件，一定程度上限制了phpshell的危害，我们一般可以设置为只能访问网站目录：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;open_basedir&amp;amp;nbsp;=&amp;amp;nbsp;D:/usr/www
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（6）&amp;amp;nbsp;关闭危险函数
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果打开了安全模式，那么函数禁止是可以不需要的，但是我们为了安全还是考虑进去。比如，我们觉得不希望执行包括system（）等在那的能够执行命令的php函数，或者能够查看php信息的phpinfo（）等函数，那么我们就可以禁止它们：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;disable_functions&amp;amp;nbsp;=&amp;amp;nbsp;system,passthru,exec,shell_exec,popen,phpinfo
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果你要禁止任何文件和目录的操作，那么可以关闭很多文件操作
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;disable_functions&amp;amp;nbsp;=&amp;amp;nbsp;chdir,chroot,dir,getcwd,opendir,readdir,scandir,fopen,unlink,delete,copy,mkdir,&amp;amp;nbsp;rmdir,rename,file,file_get_contents,fputs,fwrite,chgrp,chmod,chown以上只是列了部分不叫常用的文件处理函数，你也可以把上面执行命令函数和这个函数结合，就能够抵制大部分的phpshell了。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（7）&amp;amp;nbsp;关闭PHP版本信息在http头中的泄漏
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;我们为了防止黑客获取服务器中php版本的信息，可以关闭该信息斜路在http头中：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;expose_php&amp;amp;nbsp;=&amp;amp;nbsp;Off
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;比如黑客在&amp;amp;nbsp;telnet&amp;amp;nbsp;&amp;amp;nbsp;的时候，那么将无法看到PHP的信息。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（8）&amp;amp;nbsp;关闭注册全局变量
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;在PHP中提交的变量，包括使用POST或者GET提交的变量，都将自动注册为全局变量，能够直接访问，这是对服务器非常不安全的，所以我们不能让它注册为全局变量，就把注册全局变量选项关闭：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;register_globals&amp;amp;nbsp;=&amp;amp;nbsp;Off
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;当然，如果这样设置了，那么获取对应变量的时候就要采用合理方式，比如获取GET提交的变量var，那么就要用$_GET[&amp;amp;nbsp;var&amp;amp;nbsp;]来进行获取，这个php程序员要注意。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	&amp;lt;p&amp;gt;
		（9）&amp;amp;nbsp;打开magic_quotes_gpc来防止SQL注入
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;SQL注入是非常危险的问题，小则网站后台被入侵，重则整个服务器沦陷，所以一定要小心。php.ini中有一个设置：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;magic_quotes_gpc&amp;amp;nbsp;=&amp;amp;nbsp;Off
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;这个默认是关闭的，如果它打开后将自动把用户提交对sql的查询进行转换，比如把&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;转为&amp;amp;nbsp;&amp;amp;nbsp;等，这对防止sql注射有重大作用。所以我们推荐设置为：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;magic_quotes_gpc&amp;amp;nbsp;=&amp;amp;nbsp;On
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（10）&amp;amp;nbsp;错误信息控制
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;一般php在没有连接到数据库或者其他情况下会有提示错误，一般错误信息中会包含php脚本当前的路径信息或者查询的SQL语句等信息，这类信息提供给黑客后，是不安全的，所以一般服务器建议禁止错误提示：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;display_errors&amp;amp;nbsp;=&amp;amp;nbsp;Off
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果你却是是要显示错误信息，一定要设置显示错误的级别，比如只显示警告以上的信息：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;error_reporting&amp;amp;nbsp;=&amp;amp;nbsp;E_WARNING&amp;amp;nbsp;&amp;amp;&amp;amp;nbsp;E_ERROR
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;当然，我还是建议关闭错误提示。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;（11）&amp;amp;nbsp;错误日志
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;建议在关闭display_errors后能够把错误信息记录下来，便于查找服务器运行的原因：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;log_errors&amp;amp;nbsp;=&amp;amp;nbsp;On
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;同时也要设置错误日志存放的目录，建议根apache的日志存在一起：
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;error_log&amp;amp;nbsp;=&amp;amp;nbsp;D:/usr/local/apache2/logs/php_error.log
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;注意：给文件必须允许apache用户的和组具有写的权限。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;MYSQL的降权运行
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;新建立一个用户比如mysqlstart
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;net&amp;amp;nbsp;user&amp;amp;nbsp;mysqlstart&amp;amp;nbsp;****microsoft&amp;amp;nbsp;/add
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;net&amp;amp;nbsp;localgroup&amp;amp;nbsp;users&amp;amp;nbsp;mysqlstart&amp;amp;nbsp;/del
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;不属于任何组
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果MYSQL装在d:mysql&amp;amp;nbsp;，那么，给&amp;amp;nbsp;mysqlstart&amp;amp;nbsp;完全控制&amp;amp;nbsp;的权限然后在系统服务中设置，MYSQL的服务属性，在登录属性当中，选择此用户&amp;amp;nbsp;mysqlstart&amp;amp;nbsp;然后输入密码，确定。重新启动&amp;amp;nbsp;MYSQL服务，然后MYSQL就运行在低权限下了。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;如果是在windos平台下搭建的apache我们还需要注意一点，apache默认运行是system权限，这很恐怖，这让人感觉很不爽。那我们就给apache降降权限吧。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;net&amp;amp;nbsp;user&amp;amp;nbsp;apache&amp;amp;nbsp;****microsoft&amp;amp;nbsp;/add
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;net&amp;amp;nbsp;localgroup&amp;amp;nbsp;users&amp;amp;nbsp;apache&amp;amp;nbsp;/del
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;ok.我们建立了一个不属于任何组的用户apche。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;我们打开计算机管理器，选服务，点apache服务的属性，我们选择log&amp;amp;nbsp;on，选择this&amp;amp;nbsp;account，我们填入上面所建立的账户和密码，重启apache服务，ok，apache运行在低权限下了。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;实际上我们还可以通过设置各个文件夹的权限，来让apache用户只能执行我们想让它能干的事情，给每一个目录建立一个单独能读写的用户。
	&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;
		&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;这也是当前很多虚拟主机提供商的流行配置方法哦，不过这种方法用于防止这里就显的有点大材小用了。
	&amp;lt;/p&amp;gt;
&amp;lt;/p&amp;gt;</content>
<json-link>./file/php/2012-07-03/1341276902.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
<c>
  <author-c>游客</author-c>
  <uid-c>-1</uid-c>
  <date-c>2012-07-03+22%3A47%3A50</date-c>
  <conf-c>ccccccc</conf-c>
  <locked>false</locked>
 </c></comment-list>
</root>
