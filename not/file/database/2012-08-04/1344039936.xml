<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>MySQL的服务器关机进程</title>
<content>&amp;lt;p&amp;gt;
	服务器关闭进程可以概括为：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.启动关闭进程
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.服务器根据需要创建关闭线程
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3.服务器停止接收新连接
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	4.服务器终止当前的活动
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	5.存储引擎被停掉或关闭
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	6.服务器退出
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	下面是更详细的描述：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.启动关闭进程
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	可以用多种方法启动服务器的关闭。例如，拥有SHUTDOWN权限的用户可以执行MySQLadmin&amp;amp;nbsp;shutdown命令。mysqladmin可以用于所有支持MySQL的平台上。其它操作系统相关的关闭开始方法还可能有：在Unix中，当接收到SIGTERM信号后，服务器关闭。对于在Windows中作为服务运行的服务器，当服务管理器让它关闭时，则关闭。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.服务器根据需要创建关闭线程
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	根据开始关闭的方式，服务器可以创建线程来处理关闭进程。如果客户端需要关闭，则创建关闭线程。如果收到SIGTERM信号后关闭，信号线程可以自己关闭，或者创建单独的线程来完成。如果服务器尝试创建关闭线程而不能创建(例如，如果内存被耗尽)，它在错误日志中给出诊断消息：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Error:&amp;amp;nbsp;Can&amp;amp;nbsp;t&amp;amp;nbsp;create&amp;amp;nbsp;thread&amp;amp;nbsp;to&amp;amp;nbsp;kill&amp;amp;nbsp;server
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3.服务器停止接收新连接
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在关闭过程中要想防止启动新活动，服务器停止接收新的客户端连接。它将关闭它帧听的网络连接：TCP/IP端口、Unix套接字文件、Windows命名管道和在Windows中的共享内存。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	4.服务器终止当前的活动
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	对于每个与客户端连接相关的线程，与客户端的连接被中断，线程被标记为“杀掉的”。当线程注意到此类标记后则线程终止。空闲连接的线程很快终止。当前正处理查询的线程定期检查它们的状态，终止的时间较长。关于线程终止的详细信息，参见13.5.5.3节，“KILL语法”，特别是关于对MyISAM表的杀掉的REPAIR&amp;amp;nbsp;TABLE或OPTIMIZE&amp;amp;nbsp;TABLE操作。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	对于有打开事务的线程，事务被回滚。请注意如果某个线程正在更新非事务表，多行UPDATE或INSERT等操作会使表部分更新，因为操作在完成前会终止。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	如果服务器是主复制服务器，与当前连接的从服务器相关的线程的处理方式同其它客户端线程。即每个线程被标记为杀掉的，在下次检查他的状态后会退出。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	如果服务器是从复制服务器，在客户端线程标记为杀掉的之前，激活的I/O和SQL线程被停止。SQL线程允许先结束它当前的语句(以避免造成复制问题)然后停止。如果此时SQL线程正位于事务中部，事务则&amp;amp;nbsp;回滚。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	5.存储引擎被停掉或关闭
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在该阶段，表缓存被清空，所有打开的表被关闭。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	每个存储引擎执行它管理的表需要的任何动作。例如，MyISAM清空任何挂起的表索引写操作。InnoDB将它的缓冲池清空到硬盘上（除非innodb_fast_shutdown为2），将当前的LSN写入表内，并终止自己的内部线程。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	6.服务器退出
&amp;lt;/p&amp;gt;</content>
<json-link>./file/database/2012-08-04/1344039936.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
</comment-list>
</root>
