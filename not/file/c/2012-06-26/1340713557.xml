<?xml version="1.0" encoding="UTF-8"?>
<root>
<title>C语言概论</title>
<content>&amp;lt;p&amp;gt;
	Ｃ语言的发展过程
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言是在70年代初问世的。一九七八年由美国电话电报公司(AT&amp;amp;T)贝尔实验室正式发表了Ｃ语言。同时由B.W.Kernighan和D.M.Ritchit合著了著名的“THE&amp;nbsp;C&amp;nbsp;PROGRAMMING&amp;nbsp;LANGUAGE”一书。通常简称为《K&amp;amp;R》，也有人称之为《K&amp;amp;R》标准。但是，在《K&amp;amp;R》中并没有定义一个完整的标准C语言，后来由美国国家标准学会在此基础上制定了一个C&amp;nbsp;语言标准，于一九八三年发表。通常称之为ANSI&amp;nbsp;C。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	当代最优秀的程序设计语
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	早期的C语言主要是用于UNIX系统。由于Ｃ语言的强大功能和各方面的优点逐渐为人们认识，到了八十年代，C开始进入其它操作系统，并很快在各类大、中、小和微型计算机上得到了广泛的使用。成为当代最优秀的程序设计语言之一。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言的特点
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言是一种结构化语言。它层次清晰，便于按模块化方式组织程序，易于调试和维护。Ｃ语言的表现能力和处理能力极强。它不仅具有丰富的运算符和数据类型，便于实现各类复杂的数据结构。它还可以直接访问内存的物理地址，进行位(bit)一级的操作。由于Ｃ语言实现了对硬件的编程操作，因此Ｃ语言集高级语言和低级语言的功能于一体。既可用于系统软件的开发，也适合于应用软件的开发。此外，Ｃ语言还具有效率高，可移植性强等特点。因此广泛地移植到了各类各型计算机上，从而形成了多种版本的Ｃ语言。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言版本
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	目前最流行的Ｃ语言有以下几种：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	·Microsoft&amp;nbsp;C&amp;nbsp;或称&amp;nbsp;MS&amp;nbsp;C
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	·Borland&amp;nbsp;Turbo&amp;nbsp;C&amp;nbsp;或称&amp;nbsp;Turbo&amp;nbsp;C
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	·AT&amp;amp;T&amp;nbsp;C
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	这些Ｃ语言版本不仅实现了ANSI&amp;nbsp;C标准，而且在此基础上各自作了一些扩充，使之更加方便、完美。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	面向对象的程序设计语言
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在C的基础上，一九八三年又由贝尔实验室的Bjarne&amp;nbsp;Strou-strup推出了C++。&amp;nbsp;C++进一步扩充和完善了Ｃ语言，成为一种面向&amp;nbsp;对象的程序设计语言。C++目前流行的最新版本是Borland&amp;nbsp;C++4.5,Symantec&amp;nbsp;C++6.1,和Microsoft&amp;nbsp;VisualC++&amp;nbsp;2.0。C++提出了一些更为深入的概念，它所支持的这些面向对象的概念容易将问题空间直接地映射到程序空间，为程序员提供了一种与传统结构程序设计不同的思维方式和编程方法。因而也增加了整个语言的复杂性，掌握起来有一定难度。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ和Ｃ＋＋
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	但是，C是C++的基础，C++语言和Ｃ语言在很多方面是兼容的。因此，掌握了Ｃ语言，再进一步学习C++就能以一种熟悉的语法来学习面向对象的语言，从而达到事半功倍的目的。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ源程序的结构特点
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	为了说明Ｃ语言源程序结构的特点，先看以下几个程序。这几个程&amp;nbsp;序由简到难，表现了Ｃ语言源程序在组成结构上的特点。虽然有关内容还未介绍，但可从这些例子中了解到组成一个C源程序的基本部分和书写格式。main()
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{printf(\"c语言世界www.vcok.com，您好！\n\");
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	main是主函数的函数名，表示这是一个主函数。每一个C源程序都必须有，且只能有一个主函数(main函数)。函数调用语句，printf函数的功能是把要输出的内容送到显示器去显示。printf函数是一个由系统定义的标准函数，可在程序中直接调用。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	#include
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	#include
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	main()
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	{
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	double&amp;nbsp;x,s;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"input&amp;nbsp;number:\n\");
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	scanf(\"%lf\",&amp;amp;x);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	s=sin(x);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"sine&amp;nbsp;of&amp;nbsp;%lf&amp;nbsp;is&amp;nbsp;%lf\n\",x,s);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	每行注释
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	include称为文件包含命令扩展名为.h的文件也称为头文件或首部文件
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	定义两个实数变量，以被后面程序使用
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	显示提示信息
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	从键盘获得一个实数x
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	求x的正弦，并把它赋给变量s
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	显示程序运算结果
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	main函数结束
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	程序的功能是从键盘输入一个数x，求x的正弦值，然后输出结果。在main()之前的两行称为预处理命令(详见后面)。预处理命令还有其它几种，这里的include&amp;nbsp;称为文件包含命令，其意义是把尖括号\"\"或引号&amp;amp;lt;&amp;amp;gt;内指定的文件包含到本程序来，成为本程序的一部分。被包含的文件通常是由系统提供的，其扩展名为.h。因此也称为头文件或首部文件。Ｃ语言的头文件中包括了各个标准库函数的函数原型。因此，凡是在程序中调用一个库函数时，都必须包含该函数原型所在的头文件。在本例中，使用了三个库函数：输入函数scanf，正弦函数sin,输出函数printf。sin函数是数学函数，其头文件为math.h文件，因此在程序的主函数前用include命令包含了math.h。scanf和printf是标准输入输出函数，其头文件为stdio.h，在主函数前也用include命令包含了stdio.h文件。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	需要说明的是，C语言规定对scanf和printf这两个函数可以省去对其头文件的包含命令。所以在本例中也可以删去第二行的包含命令#include。同样，在例1.1中使用了printf函数，也省略了包含命令。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在例题中的主函数体中又分为两部分，一部分为说明部分，另一部分执行部分。说明是指变量的类型说明。例题中未使用任何变量，因此无说明部分。Ｃ语言规定，源程序中所有用到的变量都必须先说明，后使用，否则将会出错。这一点是编译型高级程序设计语言的一个特点，与解释型的BASIC语言是不同的。说明部分是C源程序结构中很重要的组成部分。本例中使用了两个变量x，s，用来表示输入的自变量和sin函数值。由于sin函数要求这两个量必须是双精度浮点型，故用类型说明符double来说明这两个变量。说明部分后的四行为执行部分或称为执行语句部分，用以完成程序的功能。执行部分的第一行是输出语句，调用printf函数在显示器上输出提示字符串，请操作人员输入自变量x的值。第二行为输入语句，调用scanf函数，接受键盘上输入的数并存入变量x中。第三行是调用sin函数并把函数值送到变量s中。第四行是用printf&amp;nbsp;函数输出变量s的值，即x的正弦值。程序结束。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"input&amp;nbsp;number:\n\");
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	scanf(\"%lf\",&amp;nbsp;C10F10&amp;amp;x);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	s=sin(x);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"sine&amp;nbsp;of&amp;nbsp;%lf&amp;nbsp;is&amp;nbsp;%lf\n\",&amp;nbsp;C10F10x,s);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	运行本程序时，首先在显示器屏幕上给出提示串input&amp;nbsp;number，这是由执行部分的第一行完成的。用户在提示下从键盘上键入某一数，如5，按下回车键，接着在屏幕上给出计算结果。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	输入和输出函数
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在前两个例子中用到了输入和输出函数scanf和&amp;nbsp;printf，在第三章中我们要详细介绍。这里我们先简单介绍一下它们的格式，以便下面使用。scanf和&amp;nbsp;printf这两个函数分别称为格式输入函数和格式输出函数。其意义是按指定的格式输入输出值。因此，这两个函数在括号中的参数表都由以下两部分组成：　“格式控制串”，参数表&amp;nbsp;　格式控制串是一个字符串，必须用双引号括起来，它表示了输入输出量的数据类型。各种类型的格式表示法可参阅第三章。在printf函数中还可以在格式控制串内出现非格式控制字符，这时在显示屏幕上将原文照印。参数表中给出了输入或输出的量。当有多个量时，用逗号间隔。例如：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"sine&amp;nbsp;of&amp;nbsp;%lf&amp;nbsp;is&amp;nbsp;%lf\n\",x,s);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	其中%lf为格式字符，表示按双精度浮点数处理。它在格式串中两次现，对应了x和s两个变量。其余字符为非格式字符则照原样输出在屏幕上
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	int&amp;nbsp;max(int&amp;nbsp;a,int&amp;nbsp;b);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	main(){
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	int&amp;nbsp;x,y,z;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"input&amp;nbsp;two&amp;nbsp;numbers:\n\");scanf(\"%d%d\",&amp;amp;x,&amp;amp;y);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	z=max(x,y);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	printf(\"maxmum=%d\",z);
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	int&amp;nbsp;max(int&amp;nbsp;a,int&amp;nbsp;b){
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	if(a&amp;amp;gt;b)return&amp;nbsp;a;else&amp;nbsp;return&amp;nbsp;b;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	}
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	此函数的功能是输入两个整数，输出其中的大数。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*函数说明*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*主函数*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*变量说明*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*输入x,y值*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*调用max函数*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*输出*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*定义max函数*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	/*把结果返回主调函数*/
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	上面例中程序的功能是由用户输入两个整数，程序执行后输出其中较大的数。本程序由两个函数组成，主函数和max&amp;nbsp;函数。函数之间是并列关系。可从主函数中调用其它函数。max&amp;nbsp;函数的功能是比较两个数，然后把较大的数返回给主函数。max&amp;nbsp;函数是一个用户自定义函数。因此在主函数中要给出说明(程序第三行)。可见，在程序的说明部分中，不仅可以有变量说明，还可以有函数说明。关于函数的详细内容将在第五章介绍。在程序的每行后用/*和*/括起来的内容为注释部分，程序不执行注释部分。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	上例中程序的执行过程是，首先在屏幕上显示提示串，请用户输入两个数，回车后由scanf函数语句接收这两个数送入变量x,y中，然后调用max函数，并把x,y&amp;nbsp;的值传送给max函数的参数a,b。在max函数中比较a,b的大小，把大者返回给主函数的变量z，最后在屏幕上输出z的值。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ源程序的结构特点
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.一个Ｃ语言源程序可以由一个或多个源文件组成。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.每个源文件可由一个或多个函数组成。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3.一个源程序不论由多少个文件组成，都有一个且只能有一个main函数，即主函数。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	4.源程序中可以有预处理命令(include&amp;nbsp;命令仅为其中的一种)，预处理命令通常应放在源文件或源程序的最前面。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	5.每一个说明，每一个语句都必须以分号结尾。但预处理命令，函数头和花括号“}”之后不能加分号。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	6.标识符，关键字之间必须至少加一个空格以示间隔。若已有明显的间隔符，也可不再加空格来间隔。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	书写程序时应遵循的规则
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	从书写清晰，便于阅读，理解，维护的角度出发，在书写程序时&amp;nbsp;应遵循以下规则：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.一个说明或一个语句占一行。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.用{}&amp;nbsp;括起来的部分，通常表示了程序的某一层次结构。{}一般与该结构语句的第一个字母对齐，并单独占一行。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3.低一层次的语句或说明可比高一层次的语句或说明缩进若干格后书写。以便看起来更加清晰，增加程序的可读性。在编程时应力求遵循这些规则，以养成良好的编程风格。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言的字符集
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	字符是组成语言的最基本的元素。Ｃ语言字符集由字母，数字，空格，标点和特殊字符组成。在字符常量，字符串常量和注释中还可以使用汉字或其它可表示的图形符号。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.字母　　小写字母a～z共26个，大写字母A～Z共26个
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.数字　　0～9共10个
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3.空白符　空格符、制表符、换行符等统称为空白符。空白符只在字符常量和字符串常量中起作用。在其它地方出现时，只起间隔作用，&amp;nbsp;编译程序对它们忽略。因此在程序中使用空白符与否，对程序的编译不发生影响，但在程序中适当的地方使用空白符将增加程序的清晰性和可读性。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	4.标点和特殊字符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言词汇
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在Ｃ语言中使用的词汇分为六类：标识符，关键字，运算符，分隔符，常量，注释符等。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	1.标识符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在程序中使用的变量名、函数名、标号等统称为标识符。除库函数的函数名由系统定义外，其余都由用户自定义。C&amp;nbsp;规定，标识符只能是字母(A～Z，a～z)、数字(0～9)、下划线()组成的字符串，并且其第一个字符必须是字母或下划线。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	以下标识符是合法的：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	a,x,&amp;nbsp;3x,BOOK&amp;nbsp;1,sum5
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	以下标识符是非法的：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3s&amp;nbsp;以数字开头
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	s*T&amp;nbsp;出现非法字符*
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	-3x&amp;nbsp;以减号开头
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	bowy-1&amp;nbsp;出现非法字符-(减号)
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在使用标识符时还必须注意以下几点：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(1)标准C不限制标识符的长度，但它受各种版本的C&amp;nbsp;语言编译系统限制，同时也受到具体机器的限制。例如在某版本C&amp;nbsp;中规定标识符前八位有效，当两个标识符前八位相同时，则被认为是同一个标识符。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(2)在标识符中，大小写是有区别的。例如BOOK和book&amp;nbsp;是两个不同的标识符。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(3)标识符虽然可由程序员随意定义，但标识符是用于标识某个量的符号。因此，命名应尽量有相应的意义，以便阅读理解，作到“顾名思义”。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	2.关键字
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	关键字是由Ｃ语言规定的具有特定意义的字符串，通常也称为保留字。用户定义的标识符不应与关键字相同。Ｃ语言的关键字分为以下几类：
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(1)类型说明符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	用于定义、说明变量、函数或其它数据结构的类型。如前面例题中用到的int,double等
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(2)语句定义符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	用于表示一个语句的功能。如例1.3中用到的if&amp;nbsp;else就是条件语句的语句定义符。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	(3)预处理命令字
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	用于表示一个预处理命令。如前面各例中用到的include。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	3.运算符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	Ｃ语言中含有相当丰富的运算符。运算符与变量，函数一起组成表达式，表示各种运算功能。运算符由一个或多个字符组成。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	4.分隔符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	在Ｃ语言中采用的分隔符有逗号和空格两种。逗号主要用在类型说明和函数参数表中，分隔各个变量。空格多用于语句各单词之间，作间隔符。在关键字，标识符之间必须要有一个以上的空格符作间隔，&amp;nbsp;否则将会出现语法错误，例如把int&amp;nbsp;a;写成&amp;nbsp;inta;C编译器会把inta当成一个标识符处理，其结果必然出错。
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	5.常量
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	C&amp;nbsp;语言中使用的常量可分为数字常量、字符常量、字符串常量、符号常量、转义字符等多种。在第二章中将专门给予介绍。&amp;nbsp;6.注释符
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
	C&amp;nbsp;语言的注释符是以“/*”开头并以“*/”结尾的串。在“/*”和“*/”之间的即为注释。程序编译时，不对注释作任何处理。注释可出现在程序中的任何位置。注释用来向用户提示或解释程序的意义。在调试程序中对暂不使用的语句也可用注释符括起来，使翻译跳过不作处理，待调试结束后再去掉注释符。
&amp;lt;/p&amp;gt;</content>
<json-link>./file/c/2012-06-26/1340713557.json</json-link>
<comment-link>4</comment-link>
<tags>5</tags>
<imghref/>
<comment-list>
 <c>
  <author-c>1</author-c>
  <uid-c>2</uid-c>
  <date-c>2</date-c>
  <conf-c>3</conf-c>
  <locked>true</locked>
 </c>
</comment-list>
</root>
