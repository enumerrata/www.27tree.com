<?xml version="1.0" encoding="UTF-8"?>
<root>
  <title><![CDATA[Go语言编程]]></title>
  <author>许式伟</author>
  <submiter-uid>2</submiter-uid>
  <submit-date-time>2012-11-15 11:08:32</submit-date-time>
  <img-link>ecac4dfb2df8613a11772f3fb9c979dc.png</img-link>
  <book-area>other</book-area>
  <book-intro><![CDATA[<p>
	在C语言和Unix操作系统发布40年后，肯·汤普森等贝尔实验室原班人马终于推出了一门全新的编程语言，它就是Go语言。Go语言凝聚了该团队将近半个世纪对计算机工程的思考成果，被称为互联网时代的C语言。自Go语言第一次发布以来，七牛云存储团队就非常密切地关注这门语言的发展，并率先在七牛的产品中进行大面积的应用，而开发效率和系统稳定性等客观数据也在持续证明我们选择Go语言的正确性。因此，我们迫不及待地希望向同行们分享这门语言，大家一起来享受Go语言所带来的极大乐趣，也一起来促进这门语言的发展吧！
</p>
<p>
	《Go语言编程》首先概览了Go语言的诞生和发展历程，从面向过程编程特性入手介绍Go语言的基础用法，让有一定C语言基础的读者可以非常迅速地入门并开始上手用Go语言来解决实际问题，之后介绍了Go语言简洁却又无比强大的面向对象编程特性和并发编程能力，至此读者已经可以理解为什么Go语言是为互联网时代而生的语言。从实用性角度出发，本书还介绍了Go语言标准库和配套工具的用法，包括安全编程、网络编程、工程管理工具等。对于希望对Go语言有更深入了解的读者，我们也特别组织了一系列进阶话题，包括语言交互性、链接符号、goroutine机理和接口机制等。《Go语言编程》适合所有层次的开发者阅读。
</p>
<p>
	<p>
		第1章 　初识Go语言
	</p>
	<p>
		1.1 　语言简史
	</p>
	<p>
		1.2 　语言特性
	</p>
	<p>
		1.2.1 　自动垃圾回收
	</p>
	<p>
		1.2.2 　更丰富的内置类型
	</p>
	<p>
		1.2.3 　函数多返回值
	</p>
	<p>
		1.2.4 　错误处理
	</p>
	<p>
		1.2.5 　匿名函数和闭包
	</p>
	<p>
		1.2.6 　类型和接口
	</p>
	<p>
		1.2.7 　并发编程
	</p>
	<p>
		1.2.8 　反射
	</p>
	<p>
		1.2.9 　语言交互性
	</p>
	<p>
		1.3 　第一个Go程序
	</p>
	<p>
		1.3.1 　代码解读
	</p>
	<p>
		1.3.2 　编译环境准备
	</p>
	<p>
		1.3.3 　编译程序
	</p>
	<p>
		1.4 　开发工具选择
	</p>
	<p>
		1.5 　工程管理
	</p>
	<p>
		1.6 　问题追踪和调试
	</p>
	<p>
		1.6.1 　打印日志
	</p>
	<p>
		1.6.2 　GDB调试
	</p>
	<p>
		1.7 　如何寻求帮助
	</p>
	<p>
		1.7.1 　邮件列表
	</p>
	<p>
		1.7.2 　网站资源
	</p>
	<p>
		1.8 　小结
	</p>
	<p>
		第2章 　顺序编程
	</p>
	<p>
		2.1 　变量
	</p>
	<p>
		2.1.1 　变量声明
	</p>
	<p>
		2.1.2 　变量初始化
	</p>
	<p>
		2.1.3 　变量赋值
	</p>
	<p>
		2.1.4 　匿名变量
	</p>
	<p>
		2.2 　常量
	</p>
	<p>
		2.2.1 　字面常量
	</p>
	<p>
		2.2.2 　常量定义
	</p>
	<p>
		2.2.3 　预定义常量
	</p>
	<p>
		2.2.4 　枚举
	</p>
	<p>
		2.3 　类型
	</p>
	<p>
		2.3.1 　布尔类型
	</p>
	<p>
		2.3.2 　整型
	</p>
	<p>
		2.3.3 　浮点型
	</p>
	<p>
		2.3.4 　复数类型
	</p>
	<p>
		2.3.5 　字符串
	</p>
	<p>
		2.3.6 　字符类型
	</p>
	<p>
		2.3.7 　数组
	</p>
	<p>
		2.3.8 　数组切片
	</p>
	<p>
		2.3.9 　map
	</p>
	<p>
		2.4 　流程控制
	</p>
	<p>
		2.4.1 　条件语句
	</p>
	<p>
		2.4.2 　选择语句
	</p>
	<p>
		2.4.3 　循环语句
	</p>
	<p>
		2.4.4 　跳转语句
	</p>
	<p>
		2.5 　函数
	</p>
	<p>
		2.5.1 　函数定义
	</p>
	<p>
		2.5.2 　函数调用
	</p>
	<p>
		2.5.3 　不定参数
	</p>
	<p>
		2.5.4 　多返回值
	</p>
	<p>
		2.5.5 　匿名函数与闭包
	</p>
	<p>
		2.6 　错误处理
	</p>
	<p>
		2.6.1 　error接口
	</p>
	<p>
		2.6.2 　defer
	</p>
	<p>
		2.6.3 　panic()和recover()
	</p>
	<p>
		2.7 　完整示例
	</p>
	<p>
		2.7.1 　程序结构
	</p>
	<p>
		2.7.2 　主程序
	</p>
	<p>
		2.7.3 　算法实现
	</p>
	<p>
		2.7.4 　主程序
	</p>
	<p>
		2.7.5 　构建与执行
	</p>
	<p>
		2.8 　小结
	</p>
	<p>
		第3章 　面向对象编程
	</p>
	<p>
		3.1 　类型系统
	</p>
	<p>
		3.1.1 　为类型添加方法
	</p>
	<p>
		3.1.2 　值语义和引用语义
	</p>
	<p>
		3.1.3 　结构体
	</p>
	<p>
		3.2 　初始化
	</p>
	<p>
		3.3 　匿名组合
	</p>
	<p>
		3.4 　可见性
	</p>
	<p>
		3.5 　接口
	</p>
	<p>
		3.5.1 　其他语言的接口
	</p>
	<p>
		3.5.2 　非侵入式接口
	</p>
	<p>
		3.5.3 　接口赋值
	</p>
	<p>
		3.5.4 　接口查询
	</p>
	<p>
		3.5.5 　类型查询
	</p>
	<p>
		3.5.6 　接口组合
	</p>
	<p>
		3.5.7 　Any类型
	</p>
	<p>
		3.6 　完整示例
	</p>
	<p>
		3.6.1 　音乐库
	</p>
	<p>
		3.6.2 　音乐播放
	</p>
	<p>
		3.6.3 　主程序
	</p>
	<p>
		3.6.4 　构建运行
	</p>
	<p>
		3.6.5 　遗留问题
	</p>
	<p>
		3.7 　小结
	</p>
	<p>
		第4章 　并发编程
	</p>
	<p>
		4.1 　并发基础
	</p>
	<p>
		4.2 　协程
	</p>
	<p>
		4.3 　goroutine
	</p>
	<p>
		4.4 　并发通信
	</p>
	<p>
		4.5 　channel
	</p>
	<p>
		4.5.1 　基本语法
	</p>
	<p>
		4.5.2 　select
	</p>
	<p>
		4.5.3 　缓冲机制
	</p>
	<p>
		4.5.4 　超时机制
	</p>
	<p>
		4.5.5 　channel的传递
	</p>
	<p>
		4.5.6 　单向channel
	</p>
	<p>
		4.5.7 　关闭channel
	</p>
	<p>
		4.6 　多核并行化
	</p>
	<p>
		4.7 　出让时间片
	</p>
	<p>
		4.8 　同步
	</p>
	<p>
		4.8.1 　同步锁
	</p>
	<p>
		4.8.2 　全局唯一性操作
	</p>
	<p>
		4.9 　完整示例
	</p>
	<p>
		4.9.1 　简单IPC框架
	</p>
	<p>
		4.9.2 　中央服务器
	</p>
	<p>
		4.9.3 　主程序
	</p>
	<p>
		4.9.4 　运行程序
	</p>
	<p>
		4.10 　小结
	</p>
	<p>
		第5章 　网络编程
	</p>
	<p>
		5.1 　Socket编程
	</p>
	<p>
		5.1.1 　Dial()函数
	</p>
	<p>
		5.1.2 　ICMP示例程序
	</p>
	<p>
		5.1.3 　TCP示例程序
	</p>
	<p>
		5.1.4 　更丰富的网络通信
	</p>
	<p>
		5.2 　HTTP编程
	</p>
	<p>
		5.2.1 　HTTP客户端
	</p>
	<p>
		5.2.2 　HTTP服务端
	</p>
	<p>
		5.3 　RPC编程
	</p>
	<p>
		5.3.1 　Go语言中的RPC支持与处理
	</p>
	<p>
		5.3.2 　Gob简介
	</p>
	<p>
		5.3.3 　设计优雅的RPC接口
	</p>
	<p>
		5.4 　JSON处理
	</p>
	<p>
		5.4.1 　编码为JSON格式
	</p>
	<p>
		5.4.2 　解码JSON数据
	</p>
	<p>
		5.4.3 　解码未知结构的JSON数据
	</p>
	<p>
		5.4.4 　JSON的流式读写
	</p>
	<p>
		5.5 　网站开发
	</p>
	<p>
		5.5.1 　最简单的网站程序
	</p>
	<p>
		5.5.2 　net/http包简介
	</p>
	<p>
		5.5.3 　开发一个简单的相册网站
	</p>
	<p>
		5.6 　小结
	</p>
	<p>
		第6章 　安全编程
	</p>
	<p>
		6.1 　数据加密
	</p>
	<p>
		6.2 　数字签名
	</p>
	<p>
		6.3 　数字证书
	</p>
	<p>
		6.4 　PKI体系
	</p>
	<p>
		6.5 　Go语言的哈希函数
	</p>
	<p>
		6.6 　加密通信
	</p>
	<p>
		6.6.1 　加密通信流程
	</p>
	<p>
		6.6.2 　支持HTTPS的Web服务器
	</p>
	<p>
		6.6.3 　支持HTTPS的文件服务器
	</p>
	<p>
		6.6.4 　基于SSL/TLS的ECHO程序
	</p>
	<p>
		6.7 　小结
	</p>
	<p>
		第7章 　工程管理
	</p>
	<p>
		7.1 　Go命令行工具
	</p>
	<p>
		7.2 　代码风格
	</p>
	<p>
		7.2.1 　强制性编码规范
	</p>
	<p>
		7.2.2 　非强制性编码风格建议
	</p>
	<p>
		7.3 　远程import支持
	</p>
	<p>
		7.4 　工程组织
	</p>
	<p>
		7.4.1 　GOPATH
	</p>
	<p>
		7.4.2 　目录结构
	</p>
	<p>
		7.5 　文档管理
	</p>
	<p>
		7.6 　工程构建
	</p>
	<p>
		7.7 　跨平台开发
	</p>
	<p>
		7.7.1 　交叉编译
	</p>
	<p>
		7.7.2 　Android支持
	</p>
	<p>
		7.8 　单元测试
	</p>
	<p>
		7.9 　打包分发
	</p>
	<p>
		7.10 　小结
	</p>
	<p>
		第8章 　开发工具
	</p>
	<p>
		8.1 　选择开发工具
	</p>
	<p>
		8.2 　gedit
	</p>
	<p>
		8.2.1 　语法高亮
	</p>
	<p>
		8.2.2 　编译环境
	</p>
	<p>
		8.3 　Vim
	</p>
	<p>
		8.4 　Eclipse
	</p>
	<p>
		8.5 　Notepad++
	</p>
	<p>
		8.5.1 　语法高亮
	</p>
	<p>
		8.5.2 　编译环境
	</p>
	<p>
		8.6 　LiteIDE
	</p>
	<p>
		8.7 　小结
	</p>
	<p>
		第9章 　进阶话题
	</p>
	<p>
		9.1 　反射
	</p>
	<p>
		9.1.1 　基本概念
	</p>
	<p>
		9.1.2 　基本用法
	</p>
	<p>
		9.1.3 　对结构的反射操作
	</p>
	<p>
		9.2 　语言交互性
	</p>
	<p>
		9.2.1 　类型映射
	</p>
	<p>
		9.2.2 　字符串映射
	</p>
	<p>
		9.2.3 　C程序
	</p>
	<p>
		9.2.4 　函数调用
	</p>
	<p>
		9.2.5 　编译Cgo
	</p>
	<p>
		9.3 　链接符号
	</p>
	<p>
		9.4 　goroutine机理
	</p>
	<p>
		9.4.1 　协程
	</p>
	<p>
		9.4.2 　协程的C语言实现
	</p>
	<p>
		9.4.3 　协程库概述
	</p>
	<p>
		9.4.4 　任务
	</p>
	<p>
		9.4.5 　任务调度
	</p>
	<p>
		9.4.6 　上下文切换
	</p>
	<p>
		9.4.7 　通信机制
	</p>
	<p>
		9.5 　接口机理
	</p>
	<p>
		9.5.1 　类型赋值给接口
	</p>
	<p>
		9.5.2 　接口查询
	</p>
	<p>
		9.5.3 　接口赋值
	</p>
	<p>
		附录A
	</p>
</p>]]></book-intro>
  <parseVersion>1.1</parseVersion>
</root>
