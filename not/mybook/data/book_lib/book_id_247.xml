<?xml version="1.0" encoding="UTF-8"?>
<root>
  <title><![CDATA[TCP/IP详解 3：TCP事务协议、HTTP、NNTP和UNIX域协议]]></title>
  <author>Stevens,W.R.</author>
  <submiter-uid>2</submiter-uid>
  <submit-date-time>2013-01-07 00:21:25</submit-date-time>
  <img-link>611753ddfa824eec139c93c3be575c5d.png</img-link>
  <book-area>web</book-area>
  <book-intro><![CDATA[<p>
	本书是“TCP/IP详解系列”的延续。主要内容包括：TCP事务协议，即T/TCP，这是对TCP的扩展，使客户-服务器事务更快、更高效和更可靠；TCP/IP应用，主要是HTTP和NNTP；UNIX域协议，这些协议提供了进程之间通信的一种手段。当客户与服务器进程在同一台主机上时，UNIX域协议通常要比TCP/IP快一倍。本书同样采用了大量的实例和实现细节，并参考引用了卷2中的大量源程序。适用于希望理解TCP/IP如何工作的人，包括编写网络应用程序的程序员以及利用TCP/IP维护计算机网络的系统管理员。
</p>
<p>
	<p>
		译者序
	</p>
	<p>
		前言
	</p>
	<p>
		第一部分 TCP事务协议
	</p>
	<p>
		第1章 T/TCP概述
	</p>
	<p>
		1.1 概述
	</p>
	<p>
		1.2 UDP上的客户-服务器
	</p>
	<p>
		1.3 TCP上的客户-服务器
	</p>
	<p>
		1.4 T/TCP上的客户-服务器
	</p>
	<p>
		1.5 测试网络
	</p>
	<p>
		1.6 时间测量程序
	</p>
	<p>
		1.7 应用
	</p>
	<p>
		1.8 历史
	</p>
	<p>
		1.9 实现
	</p>
	<p>
		1.10 小结
	</p>
	<p>
		第2章 T/TCP协议
	</p>
	<p>
		2.1 概述
	</p>
	<p>
		2.2 T/TCP中的新TCP选项
	</p>
	<p>
		2.3 T/TCP实现所需变量
	</p>
	<p>
		2.4 状态变迁图
	</p>
	<p>
		2.5 T/TCP的扩展状态
	</p>
	<p>
		2.6 小结
	</p>
	<p>
		第3章 T/TCP使用举例
	</p>
	<p>
		3.1 概述
	</p>
	<p>
		3.2 客户重新启动
	</p>
	<p>
		3.3 常规的T/TCP事务
	</p>
	<p>
		3.4 服务器收到过时的重复SYN
	</p>
	<p>
		3.5 服务器重启动
	</p>
	<p>
		3.6 请求或应答超出报文段最大长度MSS
	</p>
	<p>
		3.7 向后兼容性
	</p>
	<p>
		3.8 小结
	</p>
	<p>
		第4章 T/TCP协议（续）
	</p>
	<p>
		4.1 概述
	</p>
	<p>
		4.2 客户的端口号和TIME_WAIT状态
	</p>
	<p>
		4.3 设置TIME_WAIT状态的目的
	</p>
	<p>
		4.4 TIME_WAIT状态的截断
	</p>
	<p>
		4.5 利用TAO跳过三次握手
	</p>
	<p>
		4.6 小结
	</p>
	<p>
		第5章 T/TCP协议的实现：插口层
	</p>
	<p>
		5.1 概述
	</p>
	<p>
		5.2 常量
	</p>
	<p>
		5.3 sosend函数
	</p>
	<p>
		5.4 小结
	</p>
	<p>
		第6章 T/TCP的实现：路由表
	</p>
	<p>
		6.1 概述
	</p>
	<p>
		6.2 代码介绍
	</p>
	<p>
		6.3 radix_node_head结构
	</p>
	<p>
		6.4 rtentry结构
	</p>
	<p>
		6.5 rt_metrics结构
	</p>
	<p>
		6.6 in_inithead函数
	</p>
	<p>
		6.7 in_addroute函数
	</p>
	<p>
		6.8 in_matroute函数
	</p>
	<p>
		6.9 in_clsroute函数
	</p>
	<p>
		6.10 in_rtqtimo函数
	</p>
	<p>
		6.11 in_rtqkill函数
	</p>
	<p>
		6.12 小结
	</p>
	<p>
		第7章 T/TCP实现：协议控制块
	</p>
	<p>
		7.1 概述
	</p>
	<p>
		7.2 in_pcbladdr函数
	</p>
	<p>
		7.3 in_pcbconnect函数
	</p>
	<p>
		7.4 小结
	</p>
	<p>
		第8章 T/TCP实现： TCP概要
	</p>
	<p>
		8.1 概述
	</p>
	<p>
		8.2 代码介绍
	</p>
	<p>
		8.3 TCP的protosw结构
	</p>
	<p>
		8.4 TCP控制块
	</p>
	<p>
		8.5 tcp_init函数
	</p>
	<p>
		8.6 tcp_slowtimo函数
	</p>
	<p>
		8.7 小结
	</p>
	<p>
		第9章 T/TCP实现：TCP输出
	</p>
	<p>
		9.1 概述
	</p>
	<p>
		9.2 tcp_output函数
	</p>
	<p>
		9.2.1 新的自动变量
	</p>
	<p>
		9.2.2 增加隐藏的状态标志
	</p>
	<p>
		9.2.3 在SYN_SENT状态不要重传SYN
	</p>
	<p>
		9.2.4 发送器的糊涂窗口避免机制
	</p>
	<p>
		9.2.5 有RST或SYN标志时强制发送报文段
	</p>
	<p>
		9.2.6 发送MSS选项
	</p>
	<p>
		9.2.7 是否发送时间戳选项
	</p>
	<p>
		9.2.8 发送T/TCP的CC选项
	</p>
	<p>
		9.2.9 根据TCP选项调整数据长度
	</p>
	<p>
		9.3 小结
	</p>
	<p>
		第10章 T/TCP实现：TCP函数
	</p>
	<p>
		10.1 概述
	</p>
	<p>
		10.2 tcp_newtcpcb函数
	</p>
	<p>
		10.3 tcp_rtlookup函数
	</p>
	<p>
		10.4 tcp_gettaocache函数
	</p>
	<p>
		10.5 重传超时间隔的计算
	</p>
	<p>
		10.6 tcp_close函数
	</p>
	<p>
		10.7 tcp_msssend函数
	</p>
	<p>
		10.8 tcp_mssrcvd函数
	</p>
	<p>
		10.9 tcp_dooptions函数
	</p>
	<p>
		10.10 tcp_reass函数
	</p>
	<p>
		10.11 小结
	</p>
	<p>
		第11章 T/TCP实现：TCP输入
	</p>
	<p>
		11.1 概述
	</p>
	<p>
		11.2 预处理
	</p>
	<p>
		11.3 首部预测
	</p>
	<p>
		11.4 被动打开的启动
	</p>
	<p>
		11.5 主动打开的启动
	</p>
	<p>
		11.6 PAWS：防止序号重复
	</p>
	<p>
		11.7 ACK处理
	</p>
	<p>
		11.8 完成被动打开和同时打开
	</p>
	<p>
		11.9 ACK处理（续）
	</p>
	<p>
		11.10 FIN处理
	</p>
	<p>
		11.11 小结
	</p>
	<p>
		第12章 T/TCP实现：TCP用户请求
	</p>
	<p>
		12.1 概述
	</p>
	<p>
		12.2 PRU_CONNECT请求
	</p>
	<p>
		12.3 tcp_connect函数
	</p>
	<p>
		12.4 PRU_SEND和PRU_SEND_EOF请求
	</p>
	<p>
		12.5 tcp_usrclosed函数
	</p>
	<p>
		12.6 tcp_sysctl函数
	</p>
	<p>
		12.7 T/TCP的前景
	</p>
	<p>
		12.8 小结
	</p>
	<p>
		第二部分 TCP的其他应用
	</p>
	<p>
		第13章 HTTP：超文本传送协议
	</p>
	<p>
		13.1 概述
	</p>
	<p>
		13.2 HTTP和HTML概述
	</p>
	<p>
		13.3 HTTP
	</p>
	<p>
		13.3.1 报文类型：请求与响应
	</p>
	<p>
		13.3.2 首部字段
	</p>
	<p>
		13.3.3 响应代码
	</p>
	<p>
		13.3.4 各种报文头举例
	</p>
	<p>
		13.3.5 例子：客户程序缓存
	</p>
	<p>
		13.3.6 例子：服务器重定向
	</p>
	<p>
		13.4 一个例子
	</p>
	<p>
		13.5 HTTP的统计资料
	</p>
	<p>
		13.6 性能问题
	</p>
	<p>
		13.7 小结
	</p>
	<p>
		第14章 在HTTP服务器上找到的分组
	</p>
	<p>
		14.1 概述
	</p>
	<p>
		14.2 多个HTTP服务器
	</p>
	<p>
		14.3 客户端SYN的到达间隔时间
	</p>
	<p>
		14.4 RTT的测量
	</p>
	<p>
		14.5 用listen设置入连接队列的容量
	</p>
	<p>
		14.6 客户端的SYN选项
	</p>
	<p>
		14.7 客户端的SYN重传
	</p>
	<p>
		14.8 域名
	</p>
	<p>
		14.9 超时的持续探测
	</p>
	<p>
		14.10 T/TCP路由表大小的模拟
	</p>
	<p>
		14.11 mbuf的交互
	</p>
	<p>
		14.12 TCP的PCB高速缓存和首部预测
	</p>
	<p>
		14.13 小结
	</p>
	<p>
		第15章 NNTP：网络新闻传送协议
	</p>
	<p>
		15.1 概述
	</p>
	<p>
		15.2 NNTP
	</p>
	<p>
		15.3 一个简单的新闻客户
	</p>
	<p>
		15.4 一个复杂的新闻客户
	</p>
	<p>
		15.5 NNTP的统计资料
	</p>
	<p>
		15.6 小结
	</p>
	<p>
		第三部分 Unix域协议
	</p>
	<p>
		第16章 Unix域协议：概述
	</p>
	<p>
		16.1 概述
	</p>
	<p>
		16.2 用途
	</p>
	<p>
		16.3 性能
	</p>
	<p>
		16.4 编码举例
	</p>
	<p>
		16.5 小结
	</p>
	<p>
		第17章 Unix域协议：实现
	</p>
	<p>
		17.1 概述
	</p>
	<p>
		17.2 代码介绍
	</p>
	<p>
		17.3 Unix domain和protosw结构
	</p>
	<p>
		17.4 Unix域插口地址结构
	</p>
	<p>
		17.5 Unix域协议控制块
	</p>
	<p>
		17.6 uipc_usrreq函数
	</p>
	<p>
		17.7 PRU_ATTACH请求和unp_attach函数
	</p>
	<p>
		17.8 PRU_DETACH请求和unp_detach函数
	</p>
	<p>
		17.9 PRU_BIND请求和unp_bind函数
	</p>
	<p>
		17.10 PRU_CONNECT请求和unp_connect函数
	</p>
	<p>
		17.11 PRU_CONNECT2请求和unp_connect2函数
	</p>
	<p>
		17.12 socketpair系统调用
	</p>
	<p>
		17.13 pipe系统调用
	</p>
	<p>
		17.14 PRU_ACCEPT请求
	</p>
	<p>
		17.15 PRU_DISCONNECT请求和unp_disconnect函数
	</p>
	<p>
		17.16 PRU_SHUTDOWN请求和unp_shutdown函数
	</p>
	<p>
		17.17 PRU_ABORT请求和unp_drop函数
	</p>
	<p>
		17.18 其他各种请求
	</p>
	<p>
		17.19 小结
	</p>
	<p>
		第18章 Unix域协议：I/O和描述符的传递
	</p>
	<p>
		18.1 概述
	</p>
	<p>
		18.2 PRU_SEND和PRU_RCVD请求
	</p>
	<p>
		18.3 描述符的传递
	</p>
	<p>
		18.4 unp_internalize函数
	</p>
	<p>
		18.5 unp_externalize函数
	</p>
	<p>
		18.6 unp_discard函数
	</p>
	<p>
		18.7 unp_dispose函数
	</p>
	<p>
		18.8 unp_scan函数
	</p>
	<p>
		18.9 unp_gc函数
	</p>
	<p>
		18.10 unp_mark函数
	</p>
	<p>
		18.11 性能（再讨论）
	</p>
	<p>
		18.12 小结
	</p>
	<p>
		附录A 测量网络时间
	</p>
	<p>
		附录B 编写T/TCP应用程序
	</p>
	<p>
		参考文献
	</p>
	<p>
		缩略语
	</p>
</p>]]></book-intro>
  <parseVersion>1.1</parseVersion>
</root>
