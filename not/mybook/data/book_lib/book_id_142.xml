<?xml version="1.0" encoding="UTF-8"?>
<root>
  <title>C++编程规范:101条规则、准则与最佳实践</title>
  <author>萨特，亚历山德雷斯库</author>
  <submiter-uid>2</submiter-uid>
  <submit-date-time>2012-10-07 14:24:10</submit-date-time>
  <img-link>f62b341b499be5a8410db81db40f4caa.png</img-link>
  <book-area>cocpp</book-area>
  <book-intro>&lt;p style=\"text-indent:2em;\"&gt;
	获2005年JOLT生产效率大奖!重要提示：《C++编程规范（英文影印版） 》全面上市,大家对照英文版检查中文版翻译质量,欢迎您挑错并指正，挑错有奖！ China-Pub将从中挑选出10~20名读者赠予样书.知识有价！
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	本书作者，两位全世界最受尊敬的 C++ 专家将全球 C++ 社区的集体智慧和经验凝结成一整套编程规范。这些规范可以作为每一个开发团队制定实际开发规范的基础，更是每一位 C++ 程序员应该遵循的行事准则。
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	今年是C++ 20周年，本书的出版可以说是恰逢其时。本书是近年来最重要的C++图书，凝聚了C++界 20年的集体智慧。荣获今年Jolt生产效率大奖从某种意义上也证明了这一点。请注意它绝不是国内曾经出版的那些“规定代码应该缩进几格” 之类的编码规范书所能相提并论。
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	它首先是一本所有C++程序员都需要阅读的最佳实践指南，不仅涵盖编程，也涉及类的设计与优化等主题。书中提到的许多应该避免的问题，即使是许多C++老手也会犯。有些反映的是业界最新的经验总结，蕴涵着C++新的改进方向（毕竟，本书的作者之一是C++标准委员会的主席）。有些技术细节非常深入。同时，如果在学习C++的同时，有本书在手，就能很好地避免形成一些常见的误解，重走前人的老路。对相关各知识点的掌握也能更加深入。
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	其次，它也是开发小组制定自己所用编程规范的很好的起点。由于作者和技术审校团队的权威背景，本书的各种规则几乎都是无可置疑的。以此为参考，能够将各开发小组的规范水平提高一个档次。
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	最后，本书也是阅读众多C++经典文献的绝佳入口。因为内容是按知识点和条目形式组织的，每个条目最后又有相关的参考文献及其章节编号，查阅非常方便。
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	通过阅读本书，可以找到以下问题的答案：
&lt;/p&gt;
&lt;p style=\"text-indent:2em;\"&gt;
	哪些东西值得标准化？哪些东西不值得标准化？使代码可扩展的最佳方法是什么？合理的错误处理策略有哪些要素？如何（和为什么要）避免不必要的初始化、循环依赖和定义依赖？何时应该（以及如何）同时使用静态和动态的多态性？如何实践“安全的”改写（override）？何时该提供不会失败的交换（swap）？为什么要阻止异常跨越模块边界传播？如何阻止？为什么不应该在头文件中写名字空间声明或指令？为什么应该使用STL vector和string代替数组？如何选择正确的STL搜索算法？为了保证代码的类型安全，应该遵从哪些规则？
&lt;/p&gt;</book-intro>
</root>
