<?xml version="1.0" encoding="UTF-8"?>
<root>
  <title><![CDATA[这就是搜索引擎：核心技术详解]]></title>
  <author>张俊林</author>
  <submiter-uid>355</submiter-uid>
  <submit-date-time>2013-05-04 10:08:43</submit-date-time>
  <img-link>c8f049916972e5b48fb0fa90ec05a3ba.png</img-link>
  <book-area>other</book-area>
  <book-intro><![CDATA[<p>
	<strong> &nbsp; &nbsp; &nbsp;搜索引擎</strong>作为互联网发展中至关重要的一种应用，已经成为互联网各个领域的制高点，其重要性不言而喻。搜索引擎领域也是互联网应用中不多见的以核心技术作为其命脉的领域，搜索引擎各个子系统是如何设计的？这成为广大技术人员和搜索引擎优化人员密切关注的内容。
</p>
<p>
	本书的最大特点是内容新颖全面而又通俗易懂。对于实际搜索引擎所涉及的各种核心技术都有全面细致的介绍，除了作为搜索系统核心的网络爬虫、索引系统、排序系统、链接分析及用户分析外，还包括网页反作弊、缓存管理、网页去重技术等实际搜索引擎必须关注的技术，同时用相当大的篇幅讲解了云计算与云存储的核心技术原理。另外，本书也密切关注搜索引擎发展的前沿技术：<strong>Google的咖啡因系统</strong>及<strong>Megastore</strong>等云计算新技术、百度的暗网抓取技术阿拉丁计划、内容农场作弊、机器学习排序等。诸多新技术在相关章节都有详细讲解，同时对于社会化搜索、实时搜索及情境搜索等搜索引擎的未来发展方向做了技术展望。为了增进读者的理解，全书大量引入形象的图片来讲解算法原理，相信读者会发现原来搜索引擎的核心技术理解起来比原先想象的要简单得多。
</p>
<p>
	<br />
</p>
<p>
	<p>
		第1章　搜索引擎及其技术架构
	</p>
	<p>
		1.1　搜索引擎为何重要
	</p>
	<p>
		1.1.1　互联网的发展
	</p>
	<p>
		1.1.2　商业搜索引擎公司的发展
	</p>
	<p>
		1.1.3　搜索引擎的重要地位
	</p>
	<p>
		1.2　搜索引擎技术发展史
	</p>
	<p>
		1.2.1　史前时代：分类目录的一代
	</p>
	<p>
		1.2.2　第一代：文本检索的一代
	</p>
	<p>
		1.2.3　第二代：链接分析的一代
	</p>
	<p>
		1.2.4　第三代：用户中心的一代
	</p>
	<p>
		1.3　搜索引擎的3个目标
	</p>
	<p>
		1.4　搜索引擎的3个核心问题
	</p>
	<p>
		1.4.1　3个核心问题
	</p>
	<p>
		1.4.2　与技术发展的关系
	</p>
	<p>
		1.5　搜索引擎的技术架构
	</p>
	<p>
		第2章　网络爬虫
	</p>
	<p>
		2.1　通用爬虫框架
	</p>
	<p>
		2.2　优秀爬虫的特性
	</p>
	<p>
		2.3　爬虫质量的评价标准
	</p>
	<p>
		2.4　抓取策略
	</p>
	<p>
		2.4.1　宽度优先遍历策略（Breath　First）
	</p>
	<p>
		2.4.2　非完全PageRank策略（Partial　PageRank）
	</p>
	<p>
		2.4.3　OCIP策略（Online　Page　Importance　Computation）
	</p>
	<p>
		2.4.4　大站优先策略（Larger　Sites　First）
	</p>
	<p>
		2.5　网页更新策略
	</p>
	<p>
		2.5.1　历史参考策略
	</p>
	<p>
		2.5.2　用户体验策略
	</p>
	<p>
		2.5.3　聚类抽样策略
	</p>
	<p>
		2.6　暗网抓取（Deep　Web　Crawling）
	</p>
	<p>
		2.6.1　查询组合问题
	</p>
	<p>
		2.6.2　文本框填写问题
	</p>
	<p>
		2.7　分布式爬虫
	</p>
	<p>
		2.7.1　主从式分布爬虫（Master-Slave）
	</p>
	<p>
		2.7.2　对等式分布爬虫（Peer　to　Peer）
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第3章　搜索引擎索引
	</p>
	<p>
		3.1　索引基础
	</p>
	<p>
		3.1.1　单词—文档矩阵
	</p>
	<p>
		3.1.2　倒排索引基本概念
	</p>
	<p>
		3.1.3　倒排索引简单实例
	</p>
	<p>
		3.2　单词词典
	</p>
	<p>
		3.2.1　哈希加链表
	</p>
	<p>
		3.2.2　树形结构
	</p>
	<p>
		3.3　倒排列表（Posting　List）
	</p>
	<p>
		3.4　建立索引
	</p>
	<p>
		3.4.1　两遍文档遍历法（2-Pass　In-Memory　Inversion）
	</p>
	<p>
		3.4.2　排序法（Sort-based　Inversion）
	</p>
	<p>
		3.4.3　归并法（Merge-based　Inversion）
	</p>
	<p>
		3.5　动态索引
	</p>
	<p>
		3.6　索引更新策略
	</p>
	<p>
		3.6.1　完全重建策略（Complete　Re-Build）
	</p>
	<p>
		3.6.2　再合并策略（Re-Merge）
	</p>
	<p>
		3.6.3　原地更新策略（In-Place）
	</p>
	<p>
		3.6.4　混合策略（Hybrid）
	</p>
	<p>
		3.7　查询处理
	</p>
	<p>
		3.7.1　一次一文档（Doc　at　a　Time）
	</p>
	<p>
		3.7.2　一次一单词（Term　at　a　Time）
	</p>
	<p>
		3.7.3　跳跃指针（Skip　Pointers）
	</p>
	<p>
		3.8　多字段索引
	</p>
	<p>
		3.8.1　多索引方式
	</p>
	<p>
		3.8.2　倒排列表方式
	</p>
	<p>
		3.8.3　扩展列表方式（Extent　List）
	</p>
	<p>
		3.9　短语查询
	</p>
	<p>
		3.9.1　位置信息索引（Position　Index）
	</p>
	<p>
		3.9.2　双词索引（Nextword　Index）
	</p>
	<p>
		3.9.3　短语索引（Phrase　Index）
	</p>
	<p>
		3.9.4　混合方法
	</p>
	<p>
		3.10　分布式索引（Parallel　Indexing）
	</p>
	<p>
		3.10.1　按文档划分（Document　Partitioning）
	</p>
	<p>
		3.10.2　按单词划分（Term　Partitioning）
	</p>
	<p>
		3.10.3　两种方案的比较
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第4章　索引压缩
	</p>
	<p>
		4.1　词典压缩
	</p>
	<p>
		4.2　倒排列表压缩算法
	</p>
	<p>
		4.2.1　评价索引压缩算法的指标
	</p>
	<p>
		4.2.2　一元编码与二进制编码
	</p>
	<p>
		4.2.3　Elias　Gamma算法与Elias　Delta算法
	</p>
	<p>
		4.2.4　Golomb算法与Rice算法
	</p>
	<p>
		4.2.5　变长字节算法（Variable　Byte）
	</p>
	<p>
		4.2.6　SimpleX　系列算法
	</p>
	<p>
		4.2.7　PForDelta算法
	</p>
	<p>
		4.3　文档编号重排序（DocID　Reordering）
	</p>
	<p>
		4.4　静态索引裁剪（Static　Index　Pruning）
	</p>
	<p>
		4.4.1　以单词为中心的索引裁剪
	</p>
	<p>
		4.4.2　以文档为中心的索引裁剪
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第5章　检索模型与搜索排序
	</p>
	<p>
		5.1　布尔模型（Boolean　Model）
	</p>
	<p>
		5.2　向量空间模型（Vector　Space　Model）
	</p>
	<p>
		5.2.1　文档表示
	</p>
	<p>
		5.2.2　相似性计算
	</p>
	<p>
		5.2.3　特征权重计算
	</p>
	<p>
		5.3　概率检索模型
	</p>
	<p>
		5.3.1　概率排序原理
	</p>
	<p>
		5.3.2　二元独立模型（Binary　Independent　Model）
	</p>
	<p>
		5.3.3　BM25模型
	</p>
	<p>
		5.3.4　BM25F模型
	</p>
	<p>
		5.4　语言模型方法
	</p>
	<p>
		5.5　机器学习排序（Learning　to　Rank）
	</p>
	<p>
		5.5.1　机器学习排序的基本思路
	</p>
	<p>
		5.5.2　单文档方法（PointWise　Approach）
	</p>
	<p>
		5.5.3　文档对方法（PairWise　Approach）
	</p>
	<p>
		5.5.4　文档列表方法（ListWise　Approach）
	</p>
	<p>
		5.6　检索质量评价标准
	</p>
	<p>
		5.6.1　精确率与召回率
	</p>
	<p>
		5.6.2　P@10指标
	</p>
	<p>
		5.6.3　MAP指标（Mean　Average　Precision）
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第6章　链接分析
	</p>
	<p>
		6.1　Web图
	</p>
	<p>
		6.2　两个概念模型及算法之间的关系
	</p>
	<p>
		6.2.1　随机游走模型（Random　Surfer　Model）
	</p>
	<p>
		6.2.2　子集传播模型
	</p>
	<p>
		6.2.3　链接分析算法之间的关系
	</p>
	<p>
		6.3　PageRank算法
	</p>
	<p>
		6.3.1　从入链数量到PageRank
	</p>
	<p>
		6.3.2　PageRank计算
	</p>
	<p>
		6.3.3　链接陷阱（Link　Sink）与远程跳转（Teleporting）
	</p>
	<p>
		6.4　HITS算法（Hypertext　Induced　Topic　Selection）
	</p>
	<p>
		6.4.1　Hub页面与Authority页面
	</p>
	<p>
		6.4.2　相互增强关系
	</p>
	<p>
		6.4.3　HITS算法
	</p>
	<p>
		6.4.4　HITS算法存在的问题
	</p>
	<p>
		6.4.5　HITS算法与PageRank算法比较
	</p>
	<p>
		6.5　SALSA算法
	</p>
	<p>
		6.5.1　确定计算对象集合
	</p>
	<p>
		6.5.2　链接关系传播
	</p>
	<p>
		6.5.3　Authority权值计算
	</p>
	<p>
		6.6　主题敏感PageRank（Topic　Sensitive　PageRank）
	</p>
	<p>
		6.6.1　主题敏感PageRank与PageRank的差异
	</p>
	<p>
		6.6.2　主题敏感PageRank计算流程
	</p>
	<p>
		6.6.3　利用主题敏感PageRank构造个性化搜索
	</p>
	<p>
		6.7　Hilltop算法
	</p>
	<p>
		6.7.1　Hilltop算法的一些基本定义
	</p>
	<p>
		6.7.2　Hilltop算法
	</p>
	<p>
		6.8　其他改进算法
	</p>
	<p>
		6.8.1　智能游走模型（Intelligent　Surfer　Model）
	</p>
	<p>
		6.8.2　偏置游走模型（Biased　Surfer　Model）
	</p>
	<p>
		6.8.3　PHITS算法（Probability　Analogy　of　HITS）
	</p>
	<p>
		6.8.4　BFS算法（Backward　Forward　Step）
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第7章　云存储与云计算
	</p>
	<p>
		7.1　云存储与云计算概述
	</p>
	<p>
		7.1.1　基本假设
	</p>
	<p>
		7.1.2　理论基础
	</p>
	<p>
		7.1.3　数据模型
	</p>
	<p>
		7.1.4　基本问题
	</p>
	<p>
		7.1.5　Google的云存储与云计算架构
	</p>
	<p>
		7.2　Google文件系统（GFS）
	</p>
	<p>
		7.2.1　GFS设计原则
	</p>
	<p>
		7.2.2　GFS整体架构
	</p>
	<p>
		7.2.3　GFS主控服务器
	</p>
	<p>
		7.2.4　系统交互行为
	</p>
	<p>
		7.3　Chubby锁服务
	</p>
	<p>
		7.4　BigTable
	</p>
	<p>
		7.4.1　BigTable的数据模型
	</p>
	<p>
		7.4.2　BigTable整体结构
	</p>
	<p>
		7.4.3　BigTable的管理数据
	</p>
	<p>
		7.4.4　主控服务器（Master　Server）
	</p>
	<p>
		7.4.5　子表服务器（Tablet　Server）
	</p>
	<p>
		7.5　Megastore系统
	</p>
	<p>
		7.5.1　实体群组切分
	</p>
	<p>
		7.5.2　数据模型
	</p>
	<p>
		7.5.3　数据读写与备份
	</p>
	<p>
		7.6　Map/Reduce云计算模型
	</p>
	<p>
		7.6.1　计算模型
	</p>
	<p>
		7.6.2　整体逻辑流程
	</p>
	<p>
		7.6.3　应用示例
	</p>
	<p>
		7.7　咖啡因系统——Percolator
	</p>
	<p>
		7.7.1　事务支持
	</p>
	<p>
		7.7.2　观察/通知体系结构
	</p>
	<p>
		7.8　Pregel图计算模型
	</p>
	<p>
		7.9　Dynomo云存储系统
	</p>
	<p>
		7.9.1　数据划分算法（Partitioning　Algorithm）
	</p>
	<p>
		7.9.2　数据备份（Replication）
	</p>
	<p>
		7.9.3　数据读写
	</p>
	<p>
		7.9.4　数据版本控制
	</p>
	<p>
		7.10　PNUTS云存储系统
	</p>
	<p>
		7.10.1　PNUTS整体架构
	</p>
	<p>
		7.10.2　存储单元
	</p>
	<p>
		7.10.3　子表控制器与数据路由器
	</p>
	<p>
		7.10.4　雅虎消息代理
	</p>
	<p>
		7.10.5　数据一致性
	</p>
	<p>
		7.11　HayStack存储系统
	</p>
	<p>
		7.11.1　HayStack整体架构
	</p>
	<p>
		7.11.2　目录服务
	</p>
	<p>
		7.11.3　HayStack缓存
	</p>
	<p>
		7.11.4　HayStack存储系统
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第8章　网页反作弊
	</p>
	<p>
		8.1　内容作弊
	</p>
	<p>
		8.1.1　常见内容作弊手段
	</p>
	<p>
		8.1.2　内容农场（Content　Farm）
	</p>
	<p>
		8.2　链接作弊
	</p>
	<p>
		8.3　页面隐藏作弊
	</p>
	<p>
		8.4　Web　2.0作弊方法
	</p>
	<p>
		8.5　反作弊技术的整体思路
	</p>
	<p>
		8.5.1　信任传播模型
	</p>
	<p>
		8.5.2　不信任传播模型
	</p>
	<p>
		8.5.3　异常发现模型
	</p>
	<p>
		8.6　通用链接反作弊方法
	</p>
	<p>
		8.6.1　TrustRank算法
	</p>
	<p>
		8.6.2　BadRank算法
	</p>
	<p>
		8.6.3　SpamRank
	</p>
	<p>
		8.7　专用链接反作弊技术
	</p>
	<p>
		8.7.1　识别链接农场
	</p>
	<p>
		8.7.2　识别Google轰炸
	</p>
	<p>
		8.8　识别内容作弊
	</p>
	<p>
		8.9　反隐藏作弊
	</p>
	<p>
		8.9.1　识别页面隐藏
	</p>
	<p>
		8.9.2　识别网页重定向
	</p>
	<p>
		8.10　搜索引擎反作弊综合框架
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第9章　用户查询意图分析
	</p>
	<p>
		9.1　搜索行为及其意图
	</p>
	<p>
		9.1.1　用户搜索行为
	</p>
	<p>
		9.1.2　用户搜索意图分类
	</p>
	<p>
		9.2　搜索日志挖掘
	</p>
	<p>
		9.2.1　查询会话（Query　Session）
	</p>
	<p>
		9.2.2　点击图（Click　Graph）
	</p>
	<p>
		9.2.3　查询图（Query　Graph）
	</p>
	<p>
		9.3　相关搜索
	</p>
	<p>
		9.3.1　基于查询会话的方法
	</p>
	<p>
		9.3.2　基于点击图的方法
	</p>
	<p>
		9.4　查询纠错
	</p>
	<p>
		9.4.1　编辑距离（Edit　Distance）
	</p>
	<p>
		9.4.2　噪声信道模型（Noise　Channel　Model）
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第10章　网页去重
	</p>
	<p>
		10.1　通用去重算法框架
	</p>
	<p>
		10.2　Shingling算法
	</p>
	<p>
		10.3　I-Match算法
	</p>
	<p>
		10.4　SimHash算法
	</p>
	<p>
		10.4.1　文档指纹计算
	</p>
	<p>
		10.4.2　相似文档查找
	</p>
	<p>
		10.5　SpotSig算法
	</p>
	<p>
		10.5.1　特征抽取
	</p>
	<p>
		10.5.2　相似文档查找
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第11章　搜索引擎缓存机制
	</p>
	<p>
		11.1　搜索引擎缓存系统架构
	</p>
	<p>
		11.2　缓存对象
	</p>
	<p>
		11.3　缓存结构
	</p>
	<p>
		11.4　缓存淘汰策略（Evict　Policy）
	</p>
	<p>
		11.4.1　动态策略
	</p>
	<p>
		11.4.2　混合策略
	</p>
	<p>
		11.5　缓存更新策略（Refresh　Policy）
	</p>
	<p>
		本章提要
	</p>
	<p>
		本章参考文献
	</p>
	<p>
		第12章　搜索引擎发展趋势
	</p>
	<p>
		12.1　个性化搜索
	</p>
	<p>
		12.2　社会化搜索
	</p>
	<p>
		12.3　实时搜索
	</p>
	<p>
		12.4　移动搜索
	</p>
	<p>
		12.5　地理位置感知搜索
	</p>
	<p>
		12.6　跨语言搜索
	</p>
	<p>
		12.7　多媒体搜索
	</p>
	<p>
		12.8　情境搜索
	</p>
	<p>
		<br />
	</p>
</p>]]></book-intro>
  <parseVersion>1.1</parseVersion>
</root>
