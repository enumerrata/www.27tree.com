<?xml version="1.0" encoding="UTF-8"?>
<root>
  <title><![CDATA[java 的学习环境]]></title>
  <content><![CDATA[<p>
	你可以在各种类型的计算机上使用各种操作系统运行Java程序。Java程序在PC机的Windaws 95/98/NT上运行，与在Sun
</p>
<p>
	Solaris工作站上运行的效果一样出色。这是由于Java程序不直接在计算机上运行，它运行在一个标准的被称为Java虚拟机(Java virtual
</p>
<p>
	machine)的假想计算机中，这种虚拟机是在你的计算机中用程序仿真的，如下图所示。
</p>
<p>
	你编写的Java源代码被Java编译器转换为由字节码( byte
</p>
<p>
	codes)组成的二进制程序。字节码是Java虚拟机的机器指令。在你执行Java程序时，一个称为Java解释器(Javainterpreter)的程序将检查、解释这些字节码，验证并确保它没有被篡改，可以安全运行。然后，在Java虚拟机内执行解释的字节码。3ava解释器可以单独地运行，也可以作为Web浏览器的一部分运行。比如Netscape
</p>
<p>
	Navigator或者Micrasaft Internet Explorer,都可以自地调用并执行包含在Web网页中的小应用程序。
</p>
<p>
	因为Java程序是由字节码组成的，而不是原始的机器指令，所以与运行它的特定硬件完全无关。任何计算机只要实现Java的环境，就可以像其他计算机一样运行Java程序。由于Java解释器位于程序和物理机器之间，它可以阻止执行那些在程序中未经认一可的操作。在过去，所有这些灵活性和保护作用的获得都伴随着性能的损失，这主要反映在执行速度上。一个被解释的Java程序的运行速度仅是使用内部机器指令的相应程序的十分之一。例如，对于那些主要不是用于计算的程序(包含在Web网页中的程序就属于这类程序),你不必很注重速度问题。如果你碰巧有一个支持程序实时编译(\"Just-In-Time\"
</p>
<p>
	compilation)的Java环境，就不必担心这些性能的损失。当它们被加载时，快速编译器可以把你的Java程序转换为内部的机器指令。程序的加载时间会稍长一些，但加载成功后，就会以最高的速度运行。
</p>
<p>
	<img src=\"/mod/kd/attached/image/20130418/20130418135056_98825.gif\" alt=\"\" />
</p>
<p>
	<p>
		Java程序开发有很多优秀的Java程序开发环境，包括Sun,
	</p>
	<p>
		Borland、Symanteu的产品。它们都提供了非常友好的环境来建立、编辑源代码，编译和调试源程序。价格最低的Java程序开发包无疑是免费获得的Sun公司的Java开发工具〔IDK
	</p>
	<p>
		),但使用起来并不很方便。对于不同的硬件平台和操作系统，你可以从公司Sun
	</p>
	<p>
		Java站点的http:ffjava.sun.com网址中下载。即使你正在使用这种或者那种交互式的开发环境，我也建议你安装JDk,它为你提供了一个优秀的引用环境来检查可能出现的问题。使用Java产品提供的Java版本并不一定是最新的，所以如果你在一个商业化的Java开发系统下运行书中的例子出现了问题，就应该用JDK试看。这个环境会使程序很好地运行。
	</p>
</p>]]></content>
  <contentx><![CDATA[
	你可以在各种类型的计算机上使用各种操作系统运行Java程序。Java程序在PC机的Windaws 95/98/NT上运行，与在Sun


	Solaris工作站上运行的效果一样出色。这是由于Java程序不直接在计算机上运行，它运行在一个]]></contentx>
  <tags>_null_</tags>
  <parseVersion>1.1</parseVersion>
</root>
