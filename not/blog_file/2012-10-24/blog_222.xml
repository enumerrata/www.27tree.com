<?xml version="1.0" encoding="UTF-8"?>
<root>
  <uid>2</uid>
  <datetime>2012-10-24 16:29:44</datetime>
  <title><![CDATA[使用事务和组合SQL优化MySQL insert性能]]></title>
  <content><![CDATA[<p>
	对于一些数据量较大的系统，面临的问题除了是查询效率低下，还有一个很重要的问题就是插入时间长。我们就有一个业务系统，每天的数据导入需要4-5个钟。这种费时的操作其实是很有风险的，假设程序出了问题，想重跑操作那是一件痛苦的事情。因此，提高大数据量系统的MySQL insert效率是很有必要的。
</p>
<p>
	经过对MySQL的测试，发现一些可以提高insert效率的方法，供大家参考参考。
</p>
<p>
	<strong><span style=\"font-size:14px;\">1. 一条SQL语句插入多条数据。</span></strong>
</p>
<p>
	常用的插入语句如：
</p>
<p>
	INSERT INTO `insert_table` (`datetime`, `uid`, `content`, `type`) VALUES (\'0\', \'userid_0\', \'content_0\', 0);
</p>
<p>
	INSERT INTO `insert_table` (`datetime`, `uid`, `content`, `type`) VALUES (\'1\', \'userid_1\', \'content_1\', 1);
</p>
<p>
	修改成：
</p>
<p>
	INSERT INTO `insert_table` (`datetime`, `uid`, `content`, `type`) VALUES (\'0\', \'userid_0\', \'content_0\', 0), (\'1\', \'userid_1\', \'content_1\', 1);
</p>
<p>
	修改后的插入操作能够提高程序的插入效率。这里第二种SQL执行效率高的主要原因有两个，一是减少SQL语句解析的操作， 只需要解析一次就能进行数据的插入操作，二是SQL语句较短，可以减少网络传输的IO。
</p>
<p>
	<strong><span style=\"font-size:14px;\">2. 在事务中进行插入处理。</span></strong>
</p>
<p>
	START TRANSACTION;
</p>
<p>
	INSERT INTO `insert_table` (`datetime`, `uid`, `content`, `type`) VALUES (\'0\', \'userid_0\', \'content_0\', 0);
</p>
<p>
	INSERT INTO `insert_table` (`datetime`, `uid`, `content`, `type`) VALUES (\'1\', \'userid_1\', \'content_1\', 1);
</p>
<p>
	...
</p>
<p>
	COMMIT;
</p>
<p>
	使用事务可以提高数据的插入效率，这是因为进行一个INSERT操作时，MySQL内部会建立一个事务，在事务内进行真正插入处理。通过使用事务可以减少数据库执行插入语句时多次“创建事务，提交事务”的消耗，所有插入都在执行后才进行提交操作。
</p>]]></content>
  <contentx><![CDATA[对于一些数据量较大的系统，面临的问题除了是查询效率低下，还有一个很重要的问题就是插入时间长。我们就有一个业务系统，每天的数据导入需要4-5个钟。这种费时的操作其实是很有风险的，假设程序出了问题，想重跑操作那是一件痛苦的事情。因此，提高大数据量系统的MySQL insert效率是很有必要的。


	经过对MySQL的测试，发现一些可以提高insert效率的方法]]></contentx>
  <tags>_null_</tags>
  <parseVersion>1.1</parseVersion>
</root>
