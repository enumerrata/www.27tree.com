<?xml version="1.0" encoding="UTF-8"?>
<root>
  <uid>2</uid>
  <datetime>2013-01-12 10:32:35</datetime>
  <title><![CDATA[调整内部变量优化MySQL]]></title>
  <content><![CDATA[<p>
	MySQL是如此的开放，所以可轻松地进一步调整其缺省设置以获得更优的性能及稳定性。需要优化的一些关键变量如下：
</p>
<p>
	改变索引缓冲区长度(key_buffer)
</p>
<p>
	一般，该变量控制缓冲区的长度在处理索引表（读/写操作）时使用。MySQL使用手册指出该变量可以不断增加以确保索引表的最佳性能，并推荐使用与系统内存25％的大小作为该变量的值。这是MySQL十分重要的配置变量之一，如果你对优化和提高系统性能有兴趣，可以从改变 key_buffer_size变量的值开始。
</p>
<p>
	改变表长(read_buffer_size)
</p>
<p>
	当一个查询不断地扫描某一个表，MySQL会为它分配一段内存缓冲区。read_buffer_size变量控制这一缓冲区的大小。如果你认为连续扫描进行得太慢，可以通过增加该变量值以及内存缓冲区大小提高其性能。
</p>
<p>
	设定打开表的数目的最大值(table_cache)
</p>
<p>
	该变量控制MySQL在任何时候打开表的最大数目，由此能控制服务器响应输入请求的能力。它跟max_connections变量密切相关，增加 table_cache值可使MySQL打开更多的表，就如增加max_connections值可增加连接数一样。当收到大量不同数据库及表的请求时，可以考虑改变这一值的大小。
</p>
<p>
	对缓长查询设定一个时间限制(long_query_time)
</p>
<p>
	MySQL带有“慢查询日志”，它会自动地记录所有的在一个特定的时间范围内尚未结束的MySQL查询。这个日志对于跟踪那些低效率或者行为不端的查询以及寻找优化对象都非常有用。long_query_time变量控制这一最大时间限定，以秒为单位。
</p>]]></content>
  <contentx><![CDATA[MySQL是如此的开放，所以可轻松地进一步调整其缺省设置以获得更优的性能及稳定性。需要优化的一些关键变量如下：


	改变索引缓冲区长度(key_buffer)


	一般，该变量控制缓冲区的长度在处理索引表（读/写操作）时使用。MySQL使用手册指出该变量可以不断增加以确保索引表的最佳性能，并推荐使用与系统内存25％的大小作为该变量的值。这是MySQL十分]]></contentx>
  <tags>_null_</tags>
  <parseVersion>1.1</parseVersion>
</root>
