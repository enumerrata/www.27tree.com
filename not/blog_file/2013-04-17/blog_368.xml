<?xml version="1.0" encoding="UTF-8"?>
<root>
  <title><![CDATA[PHP的语言结构和函数]]></title>
  <content><![CDATA[<p>
	大家经常看到对比一些PHP应用中，说用isset() 替换 strlen()，isset比strlen执行速度快等。
</p>
<p>
	例子：
</p>
<p>
	if ( isset($user) ) {
</p>
<p>
	//do some thing
</p>
<p>
	}
</p>
<p>
	原因是isset是语言结构，而strlen是一个函数。还有echo 是个语言结构，不是个函数。
</p>
<p>
	那什么是语言结构呢？它和函数有什么不同吗？
</p>
<p>
	1、 什么是语言结构和函数
</p>
<p>
	语言结构：就是PHP语言的关键词，语言语法的一部分；它不可以被用户定义或者添加到语言扩展或者库中；它可以有也可以没有变量和返回值。
</p>
<p>
	函数：由代码块组成的，可以复用。从源码的角度来说，也就是基于Zend引擎的基础来实现的，ext拓展库中的函数都是这样实现的。
</p>
<p>
	2、 语言结构为什么比函数快原因是在PHP中，函数都要先被PHP解析器（Zend引擎）分解成语言结构，所以有此可见，函数比语言结构多了一层解析器解析。这样就能比较好的理解，什么语言结构比函数快了。
</p>
<p>
	3、 语言结构和函数的不同语言结构比对应功能的函数快语言结构在错误处理上比较鲁棒，由于是语言关键词，所以不具备再处理的环节语言结构不能在配置项(php.ini)中禁用，函数则可以。语言结构不能被用做回调函数
</p>
<p>
	4、 语言结构列表
</p>
<p>
	echo()
</p>
<p>
	print()
</p>
<p>
	die()
</p>
<p>
	isset()
</p>
<p>
	unset()
</p>
<p>
	include()，注意，include_once()是函数
</p>
<p>
	require()，注意，require_once()是函数
</p>
<p>
	array()
</p>
<p>
	list()
</p>
<p>
	empty()
</p>]]></content>
  <contentx><![CDATA[
	大家经常看到对比一些PHP应用中，说用isset() 替换 strlen()，isset比strlen执行速度快等。


	例子：


	if ( isset($user) ) {


	//do some thing


	}


	]]></contentx>
  <tags>_null_</tags>
  <parseVersion>1.1</parseVersion>
</root>
