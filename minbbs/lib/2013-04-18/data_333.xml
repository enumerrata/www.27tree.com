<?xml version="1.0" encoding="UTF-8"?>
<root>
  <uid>2</uid>
  <datetime>2013-04-18 11:09:11</datetime>
  <title><![CDATA[Position定位：relative | absolute]]></title>
  <content><![CDATA[<p>
	定位一直是WEB标准应用中的难点，如果理不清楚定位那么可能应实现的效果实现不了，实现了的效果可能会走样。如果理清了定位的原理，那定位会让网页实现的更加完美。
</p>
<p>
	<br />
</p>
<p>
	在CSS中关于定位的内容是：<strong>position:relative | absolute | static | fixed</strong> 
</p>
<p>
	<strong>static(静态) </strong>没有特别的设定，遵循基本的定位规定，不能通过z-index进行层次分级。
</p>
<p>
	<strong>relative(相对定位) </strong>对象不可层叠、不脱离文档流，参考自身静态位置通过 top,bottom,left,right 定位，并且可以通过z-index进行层次分级。
</p>
<p>
	<strong>absolute(绝对定位) </strong>脱离文档流，通过 top,bottom,left,right 定位。选取其最近一个最有定位设置的父级对象进行绝对定位，如果对象的父级没有设置定位属性，absolute元素将以body坐标原点进行定位，可以通过z-index进行层次分级。
</p>
<p>
	<strong>fixed（固定定位） </strong>这里所固定的参照对像是可视窗口而并非是body或是父级元素。可通过z-index进行层次分级。
</p>
<p>
	<br />
</p>
<p>
	<span style=\"font-size:16px;\"><strong>1、相对定位relative</strong></span> 
</p>
<p>
	相对定位是一个非常容易掌握的概念。如果对一个元素进行相对定位，它将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，让这个元素“相对于”它的起点进行移动。如果将top设置为20像素，那么框将出现在原位置顶部下面20像素的地方。如果将left设置为20像素，那么会在元素左边创建20像素的空间，也就是将元素向右移动（见图2-10）。
</p>
<pre name=\"code\" id=\"prettyprint\" class=\"javascript\">#mybox {
    position :relative;
    left: 20px;
    top: 20px;
}</pre>
<p>
	<img src=\"/mod/kd/attached/image/20130418/20130418110628_70231.jpg\" alt=\"\" />
</p>
<p>
	<br />
</p>
<p>
	<strong>当Position属性值为Relative时</strong> 
</p>
<p>
	对象原来占有的位置保留，其后面的对象按原来文档流仍然保持原来的位置
</p>
<p>
	Top的值表示对象相对原位置向下偏移的距离
</p>
<p>
	bottom的值表示对象相对原位置向上偏移的距离
</p>
<p>
	两者同时存在时，只有Top起作用。
</p>
<p>
	left的值表示对象相对原位置向右偏移的距离
</p>
<p>
	right的值表示对象相对原位置向左偏移的距离
</p>
<p>
	两者同时存在时，只有left起作用。
</p>
<p>
	如果相对定位的对象有padding 和border 和 margin时，定位的起点不受影响。还是原来物体的位置。
</p>
<p>
	<br />
</p>
<p>
	<strong><span style=\"font-size:16px;\">2.绝对定位absolute</span></strong> 
</p>
<p>
	&nbsp; &nbsp;相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。与之相反，绝对定位使元素的位置与文档流无关，因此不占据空间。普通文档流中其他元素的布局就像绝对定位的元素不存在时一样（见图2-11）。
</p>
<img src=\"/mod/kd/attached/image/20130418/20130418110713_43391.jpg\" alt=\"\" /> 
<p>
	<br />
</p>
<p>
	绝对定位的元素的位置相对于最近的已定位祖先元素。如果元素没有已定位的祖先元素，那么它的位置相对于最初的包含块。根据用户代理的不同，最初的包含块可能是画布或HTML元素。
</p>
<p>
	与相对定位的框一样，绝对定位的框可以从它的包含块向上、下、左、右移动。这提供了很大的灵活性。可以直接将元素定位在页面上的任何位置。
</p>
<p>
	对于定位的主要问题是要记住每种定位的意义。相对定位是“相对于”元素在文档流中的初始位置，而绝对定位是“相对于”最近的已定位祖先元素，如果不存在已定位的祖先元素，那么是最初的包含块。
</p>
<p>
	因为绝对定位的框与文档流无关，所以它们可以覆盖页面上的其他元素。可以通过设置z-index属性来控制这些框的堆放次序。z-index值越高，框在堆中的位置就越高。
</p>
<p>
	<br />
</p>
<p>
	<strong>当Position属性值为absolute时</strong> 
</p>
<p>
	对象从文档流中抽取出来，原占有的位置被后面的对象顶替上来
</p>
<p>
	Top的值表示对象上边框与浏览器窗口顶部的距离
</p>
<p>
	bottom的值表示对象下边框与浏览器窗口底部的距离
</p>
<p>
	两者同时存在时，只有Top起作用；如果两者都未指定，则其顶端将与原文档流位置一致，即垂直保持位置不变。
</p>
<p>
	left的值表示对象左边框与浏览器窗口左边的距离
</p>
<p>
	right的值表示对象右边框与浏览器窗口右边的距离
</p>
<p>
	两者同时存在时，只有left起作用；如果两者都未指定，则其左边将与原文档流位置一致，即水平保持位置不变。
</p>
<p>
	在Position属性值为absolute的同时，如果有一级父对象（无论是父对象还是祖父对象，或者再高的辈分，一样）的Position属性值为Relative时，则上述的相对浏览器窗口定位将会变成相对父对象定位，这对精确定位是很有帮助的。
</p>
<p>
	<br />
</p>]]></content>
  <parseVersion>1.1</parseVersion>
  <state>0</state>
</root>
